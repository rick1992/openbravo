<?xml version="1.0"?>
  <database name="FUNCTION SWA_RECEIPT_MANAGE_RESERVED">
    <function name="SWA_RECEIPT_MANAGE_RESERVED" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistics
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- Success
  v_Record_ID VARCHAR2(32);
  v_User VARCHAR2(32);
  v_User_ID VARCHAR2(32);
  v_Client_ID VARCHAR(32); 
  v_Org_ID VARCHAR(32);
  v_docstatus VARCHAR(60); 
  v_action_missing VARCHAR(60); 
  v_Warehouse_ID  VARCHAR(32);
  v_qtyreserved NUMBER:=0;
  v_qtyreceipt NUMBER:=0;
  Cur_Parameter RECORD;
  
 
BEGIN
    
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL);

    IF (p_PInstance_ID IS NULL) THEN
      RAISE_APPLICATION_ERROR(-20000, '@SWA_ErrorInProcessCall@') ;
    END IF;

    IF (p_PInstance_ID IS NOT NULL)THEN
      FOR Cur_Parameter IN
        (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String,
          p.P_Number, p.P_Date
        FROM AD_PINSTANCE i
        LEFT JOIN AD_PINSTANCE_PARA p
          ON i.AD_PInstance_ID=p.AD_PInstance_ID
        WHERE i.AD_PInstance_ID=p_PInstance_ID
        ORDER BY p.SeqNo
        )
      LOOP

        IF (Cur_Parameter.parametername = 'swa_qtyreserved') THEN
            v_qtyreserved:=COALESCE(Cur_Parameter.P_Number,0);
        END IF;
      END LOOP; -- Get Parameter
    END IF;

    SELECT Record_ID, CreatedBy
      INTO v_Record_ID, v_User_ID
      FROM AD_PInstance
     WHERE AD_PInstance_ID = p_PInstance_ID;

     --La nueva cantidad a reservar no debe ser negativa
    IF(v_qtyreserved < 0)THEN
     RAISE_APPLICATION_ERROR(-20000,'@swa_inventory_invalid_qtyreserved@');
    END IF;

    FOR Cur_Parameter IN (
        SELECT *
          FROM swa_requerepo_detail 
         WHERE swa_requerepo_detail_id = v_Record_ID FOR UPDATE
    ) 
    LOOP
        IF(v_qtyreserved > Cur_Parameter.qtyreceipt) THEN
           RAISE_APPLICATION_ERROR(-20000,'@swa_receipt_invalid_qtyreserved@');
        END IF;

           --Eliminando la Reserva existente
 SWA_RESERVATION_REMOVE(v_Record_ID, 'REP');

	    --Actualizando la cantidad nueva a reservar
	UPDATE swa_requerepo_detail
	   SET qtyreserved= v_qtyreserved
	 WHERE swa_requerepo_detail_id = v_Record_ID;
	     
	 --Creando Reserva para la nueva cantidad, esta cantidad solo sirve cuando es positiva, en caso
	 --de ser cero, no se harÃ¡ ninguna reserva
	 IF(v_qtyreserved > 0)THEN
	   SWA_RESERVATION_CREATE(v_Record_ID, 'REP');     
	 END IF;
   END LOOP;

    v_Message:='@swa_successful@'; --OBTG:-20000--
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;

    EXCEPTION
    WHEN OTHERS THEN
      v_ResultStr:= '@ERROR=' || SQLERRM;
      IF(p_PInstance_ID IS NOT NULL) THEN
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
      END IF;

    RETURN;
END SWA_RECEIPT_MANAGE_RESERVED
]]></body>
    </function>
  </database>
