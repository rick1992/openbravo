<?xml version="1.0"?>
  <database name="TRIGGER SWA_M_INOUTLINE_VALIDATE_TRG">
    <trigger name="SWA_M_INOUTLINE_VALIDATE_TRG" table="M_INOUTLINE" fires="before" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[




  v_ID          varchar2(32);
  v_RO    NUMBER;
  -- v_movementtype  VARCHAR(2); --OBTG:VARCHAR2--  Comment by Vafaster
  v_movementtype  VARCHAR2(60);
  
  v_warehouseH varchar2(32);
  v_warehouseL varchar2(32);

/******************************************************************************
 * The contents of this file are subject to the   Compiere License  Version 1.1
 * ("License"); You may not use this file except in compliance with the License
 * You may obtain a copy of the License at http://www.compiere.org/license.html
 * Software distributed under the License is distributed on an  "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 * The Original Code is                  Compiere  ERP &  Business Solution
 * The Initial Developer of the Original Code is Jorg Janke  and ComPiere, Inc.
 * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke, parts
 * created by ComPiere are Copyright (C) ComPiere, Inc.;   All Rights Reserved.
 * Contributor(s): Openbravo SLU
 * Contributions are Copyright (C) 2001-2013 Openbravo S.L.U.
 ******************************************************************************/
     
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;

IF (INSERTING) THEN
   IF(:NEW.M_LOCATOR_ID IS NOT NULL)THEN
      SELECT M_WAREHOUSE_ID INTO v_warehouseH FROM M_INOUT WHERE M_INOUT_ID = :NEW.M_INOUT_ID;
      SELECT M_WAREHOUSE_ID INTO v_warehouseL FROM M_LOCATOR WHERE M_LOCATOR_ID = :NEW.M_LOCATOR_ID;

      IF(v_warehouseH <> v_warehouseL)THEN
        RAISE_APPLICATION_ERROR(-20000, '@swa_invalidLocatorWarehouseToline@') ;
      END IF;
      
   END IF;
    
END IF;

IF (UPDATING) THEN
   IF((:OLD.M_LOCATOR_ID <> :NEW.M_LOCATOR_ID) AND :NEW.M_LOCATOR_ID IS NOT NULL)THEN
      SELECT M_WAREHOUSE_ID INTO v_warehouseH FROM M_INOUT WHERE M_INOUT_ID = :NEW.M_INOUT_ID;
      SELECT M_WAREHOUSE_ID INTO v_warehouseL FROM M_LOCATOR WHERE M_LOCATOR_ID = :NEW.M_LOCATOR_ID;

      IF(v_warehouseH <> v_warehouseL)THEN
        RAISE_APPLICATION_ERROR(-20000, '@swa_invalidLocatorWarehouseToline@') ;
      END IF;
     
   END IF;
    
END IF;


END SWA_M_INOUTLINE_VALIDATE_TRG
]]></body>
    </trigger>
  </database>
