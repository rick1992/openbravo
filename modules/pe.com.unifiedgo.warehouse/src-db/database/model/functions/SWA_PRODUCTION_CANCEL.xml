<?xml version="1.0"?>
  <database name="FUNCTION SWA_PRODUCTION_CANCEL">
    <function name="SWA_PRODUCTION_CANCEL" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistics
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32);
  v_Result NUMBER:=1; -- Success
  countLines NUMBER:=0; -- Success
  v_partner_id VARCHAR2(32);
  v_from_warehouse VARCHAR2(32);
  v_to_warehouse VARCHAR2(32);
  v_iscreated CHAR; --OBTG:VARCHAR2--
  v_em_swa_state_tmp_bom VARCHAR2(60);
  v_reason VARCHAR2(300):= '';
  v_description VARCHAR2(2000);
  v_count NUMBER:=0;
  v_documentno VARCHAR2(30):= '';
  

-- Record Info
  Cur_Parameter VARCHAR%ROWTYPE; --OBTG:VARCHAR2--
  v_orderApprovedState VARCHAR2(32);

BEGIN
    
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
    -- Get Parameters
    IF (p_PInstance_ID IS NULL) THEN
      RAISE NO_DATA_FOUND ;
    END IF;


    IF (p_PInstance_ID IS NOT NULL)THEN
      FOR Cur_Parameter IN
        (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String,
          p.P_Number, p.P_Date
        FROM AD_PINSTANCE i
        LEFT JOIN AD_PINSTANCE_PARA p
          ON i.AD_PInstance_ID=p.AD_PInstance_ID
        WHERE i.AD_PInstance_ID=p_PInstance_ID
        ORDER BY p.SeqNo
        )
      LOOP
        

        IF (Cur_Parameter.parametername = 'swa_reason_to_cancel') THEN
            v_reason:=COALESCE(Cur_Parameter.p_string,'');
        END IF;
      END LOOP; -- Get Parameter
    END IF;

    
    SELECT Record_ID, CreatedBy
      INTO v_Record_ID, v_User_ID
      FROM AD_PInstance
     WHERE AD_PInstance_ID = p_PInstance_ID;

    SELECT iscreated,em_swa_state_tmp_bom, description
      INTO v_iscreated,v_em_swa_state_tmp_bom , v_description
    FROM m_production
    WHERE m_production_id=v_Record_ID;

     --concatenando La descripcion con el motivo de Rechazo (Cancelado)
     v_description:= COALESCE(v_reason,'');
    --

    --Viendo si existen Picking asociado en Borrador a mi Produccion, entonces cancelar los picking
    UPDATE obwpl_pickinglist
       SET pickliststatus='CA'
     WHERE em_swa_m_production_id = v_Record_ID
       AND pickliststatus='DR';
    --Si existen picking completados, entonces alertar que el picking ya esta completado por tal primero se debe anular el picking

   

    SELECT COUNT(*) INTO v_count FROM obwpl_pickinglist WHERE em_swa_m_production_id = v_Record_ID AND pickliststatus='CO';
    IF(COALESCE(v_count,0) > 0) THEN
     SELECT documentno INTO v_documentno FROM obwpl_pickinglist WHERE em_swa_m_production_id = v_Record_ID AND pickliststatus='CO' LIMIT 1;
     RAISE_APPLICATION_ERROR(-20000, '@swa_productionWithPickingCompleted@' || ' - ' || COALESCE(v_documentno,'-'));
    END IF;

    

    UPDATE m_production
    SET em_swa_state_tmp_bom='DI',
        iscreated='N',
        em_swa_evaluation_description = v_description,
        em_swa_evaluationby=v_User_ID,
        em_swa_evaluation=now()
    WHERE m_production_id=v_Record_ID;

    --Eliminando la Reserva si Existiera
     FOR Cur_Parameter IN(
	      SELECT *
	       FROM m_productionline pl
	       INNER JOIN m_productionplan pp on pl.m_productionplan_id = pp.m_productionplan_id 
	      WHERE pp.m_production_id = v_Record_ID FOR UPDATE
     )LOOP
          SWA_RESERVATION_REMOVE(Cur_Parameter.m_productionline_id, 'PRO');
      END LOOP;
    --
        
    v_Message:='Terminated';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;

    EXCEPTION
    WHEN OTHERS THEN
      v_ResultStr:= '@ERROR=' || SQLERRM;
      IF(p_PInstance_ID IS NOT NULL) THEN
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
      END IF;

    RETURN;
END SWA_PRODUCTION_CANCEL
]]></body>
    </function>
  </database>
