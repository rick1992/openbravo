<?xml version="1.0"?>
  <database name="FUNCTION SCO_MARK_BOE_AS_RECEIVED">
    <function name="SCO_MARK_BOE_AS_RECEIVED" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_AD_User_ID VARCHAR2(32):='0';
  -- Parameter
  TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  -- Parameter Variables

  v_Client_ID VARCHAR2(32);

  v_Aux NUMBER;

  p_receiptdate DATE;
  p_isreceipt VARCHAR(1);

  v_invdocstatus VARCHAR(60);
  v_invdateinvoiced DATE; 
  v_isreceipt VARCHAR(1);

  Cur_BOE RECORD;

  BEGIN
    IF(p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
      v_ResultStr:='PInstanceNotFound';
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
      -- Get Parameters
      v_ResultStr:='ReadingParameters';
      FOR Cur_Parameter IN
        (SELECT i.Record_ID,i.AD_User_ID, i.AD_Client_ID, p.ParameterName, p.P_String, p.P_Date 
         FROM AD_PInstance i
           LEFT JOIN AD_PInstance_Para p ON i.AD_PInstance_ID=p.AD_PInstance_ID
         WHERE i.AD_PInstance_ID=p_PInstance_ID
         ORDER BY p.SeqNo) 
      LOOP
         IF (Cur_Parameter.ParameterName = 'receiptdate') THEN
             p_receiptdate := Cur_Parameter.P_Date;
	     DBMS_OUTPUT.PUT_LINE(' p_receiptdate=' || p_receiptdate) ;
         ELSIF (Cur_Parameter.ParameterName = 'EM_Scr_Isreceived') THEN
             p_isreceipt := Cur_Parameter.P_String;
	     DBMS_OUTPUT.PUT_LINE(' p_EM_Scr_Isreceived=' || p_isreceipt) ;
         ELSE
             DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
         END IF;

	  v_Record_ID:=Cur_Parameter.Record_ID;
          v_AD_User_ID:=Cur_Parameter.AD_User_ID;
          v_Client_ID:=Cur_Parameter.AD_Client_ID;
      END LOOP; -- Get Parameter
    ELSE
      RAISE NO_DATA_FOUND;
    END IF;
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;

  BEGIN --BODY 

      FOR Cur_BOE IN
        (SELECT c_invoice_id, docstatus,dateinvoiced, EM_Scr_Isreceived 
         FROM C_Invoice 
         WHERE em_sco_boe_id = v_Record_ID 
           AND docstatus = 'CO' FOR UPDATE) 
      LOOP
	IF (Cur_BOE.EM_Scr_Isreceived <> p_isreceipt OR Cur_BOE.dateinvoiced<>p_receiptdate) THEN
	    UPDATE C_Invoice SET Processed = 'N' WHERE C_Invoice_ID = Cur_BOE.c_invoice_id;
	    UPDATE C_Invoice SET em_scr_isreceived = p_isreceipt WHERE C_Invoice_ID = Cur_BOE.c_invoice_id;
	    UPDATE C_Invoice SET dateinvoiced = p_receiptdate WHERE C_Invoice_ID = Cur_BOE.c_invoice_id;
	    UPDATE C_Invoice SET Processed = 'Y' WHERE C_Invoice_ID = Cur_BOE.c_invoice_id;
        END IF;
      END LOOP; -- Get Parameter

    v_Message:= '@SCR_BOEReceptionSuccess@';

    IF(p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
    ELSE
      DBMS_OUTPUT.PUT_LINE('Finished ' || v_Message) ;
    END IF;
    RETURN;
    
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  END IF;
--  RETURN;
END SCO_MARK_BOE_AS_RECEIVED
]]></body>
    </function>
  </database>
