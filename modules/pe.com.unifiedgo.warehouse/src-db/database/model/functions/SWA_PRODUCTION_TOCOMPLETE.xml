<?xml version="1.0"?>
  <database name="FUNCTION SWA_PRODUCTION_TOCOMPLETE">
    <function name="SWA_PRODUCTION_TOCOMPLETE" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistics
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32);
  v_Result NUMBER:=1; -- Success
  v_count_pplan NUMBER:=0;
  
  v_org_id VARCHAR(32);
  v_client_id VARCHAR(32);
  v_docstatus VARCHAR2(60);
  v_isdisarmed CHARACTER;
  v_pinstance_ID VARCHAR(32);
  v_swa_m_warehouse_id VARCHAR(32);
  v_pinstance_result AD_PInstance.result%TYPE;
  v_pinstance_msg AD_PInstance.errormsg%TYPE;
  v_qty_available NUMBER:=0;
  v_product_info VARCHAR(200);
-- Record Info
  v_orderApprovedState VARCHAR(32);
  CUR_pplan RECORD;

BEGIN
    
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
    -- Get Parameters
    IF (p_PInstance_ID IS NULL) THEN
      RAISE NO_DATA_FOUND ;
    END IF;

    SELECT Record_ID, CreatedBy
      INTO v_Record_ID, v_User_ID
      FROM AD_PInstance
     WHERE AD_PInstance_ID = p_PInstance_ID;

    SELECT ad_client_id,ad_org_id, em_swa_state_tmp_bom, em_swa_desarmado, em_swa_m_warehouse_id
      INTO v_client_id, v_org_id, v_docstatus, v_isdisarmed, v_swa_m_warehouse_id
      FROM M_production 
     WHERE m_production_id = v_Record_ID;


    SELECT count(*) INTO v_count_pplan FROM M_PRODUCTIONPLAN WHERE M_PRODUCTION_ID = v_Record_ID;
    IF(v_count_pplan=0) THEN
     RAISE_APPLICATION_ERROR(-20000, '@swa_bom_need_pplan@');
    END IF;
     

    IF(v_docstatus='DR' AND v_isdisarmed='Y')THEN
         UPDATE M_production
            SET em_swa_state_tmp_bom='PD'
          WHERE m_production_id = v_Record_ID;

          v_Message := '@swa_productionNeedApprobation@' || v_Message;       
          v_Result := 2;
          AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
          RETURN;
     
    END IF;



    --Validar; Si solicito armar menos de lo que tengo disponible en almacÃ©n, entonces no me debe dejar
     /*IF(v_isdisarmed='N')THEN
          FOR CUR_pplan IN (
            SELECT * FROM M_PRODUCTIONPLAN WHERE M_PRODUCTION_ID = v_Record_ID
          )
	  LOOP
	     v_qty_available:= swa_product_getstock(CUR_pplan.m_product_id,v_swa_m_warehouse_id,'',3); 

	     IF(CUR_pplan.productionqty <= v_qty_available)THEN
	      SELECT value || ' - ' || name INTO v_product_info FROM M_PRODUCT WHERE M_PRODUCT_ID = CUR_pplan.m_product_id;
	      RAISE_APPLICATION_ERROR(-20000, '@swa_productionWithStock@' || ' ' ||v_product_info);
	     END IF;
	  END LOOP;
     END IF;*/
    ---

    --Llamar a la funcion swa_production_toComplete Este calcula las lineas y revisa el stock
     --Creando ad_pinstance


     v_pinstance_id := get_uuid();
     INSERT INTO ad_pinstance (
           ad_pinstance_id, ad_process_id, record_id, isactive, 
           ad_user_id, ad_client_id, ad_org_id, created, createdby,
           updated, updatedby
     ) VALUES (
           v_pinstance_id, 'E17C95536DDA4A42A5B6FE9EA1FF9D4D', v_record_id, 'Y', -- | 137 is m_productionrun | E17C95536DDA4A42A5B6FE9EA1FF9D4D es swa_production_createlines
           v_User_ID, v_client_id, v_org_id, now(), v_User_ID,
           now(), v_User_ID
     );

    -- PERFORM M_PRODUCTION_RUN(v_pinstance_ID); M_production_run codigo Original de Openbravo
       SWA_PRODUCTION_CREATELINES(v_pinstance_ID); --swa_production_createlines llama a m_productionrun pero adicionalmente hace la reserva de lo calculado

     SELECT result, errormsg
       INTO v_pinstance_result, v_pinstance_msg
       FROM ad_pinstance
      WHERE ad_pinstance_id = v_pinstance_id;
            
      IF (v_pinstance_result = 0) THEN
         RAISE_APPLICATION_ERROR(-20000, v_pinstance_msg);
      END IF;
    --
    

    IF(v_docstatus IN ('DR','PD'))THEN
     UPDATE M_production
        SET em_swa_state_tmp_bom='CO'
      WHERE m_production_id = v_Record_ID;
    END IF;
  
        
    v_Message:='Terminated';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;

    EXCEPTION
    WHEN OTHERS THEN
      v_ResultStr:= '@ERROR=' || SQLERRM;
      IF(p_PInstance_ID IS NOT NULL) THEN
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
      END IF;

    RETURN;
END SWA_PRODUCTION_TOCOMPLETE
]]></body>
    </function>
  </database>
