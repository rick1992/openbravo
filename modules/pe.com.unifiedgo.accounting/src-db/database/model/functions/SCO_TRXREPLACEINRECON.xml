<?xml version="1.0"?>
  <database name="FUNCTION SCO_TRXREPLACEINRECON">
    <function name="SCO_TRXREPLACEINRECON" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_AD_User_ID VARCHAR2(32):='0';
  -- Parameter
  TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  -- Parameter Variables
  --
  Cur_finacc_transaction RECORD;
  Cur_replace_finacc_transaction RECORD;
  -- 
  v_NextNo VARCHAR2(32) ;
  v_count NUMBER(10):=0;
  v_Client_ID VARCHAR2(32);
  v_Org_ID VARCHAR2(32);
  v_UpdatedBy VARCHAR2(32);
  v_DocAction VARCHAR(60) ;
  v_DocStatus VARCHAR(60) ;  
  v_IsProcessing CHAR(1) ;
  v_IsProcessed VARCHAR(60) ;
  v_DocType_ID VARCHAR2(32);
  v_DocTypeTarget_ID VARCHAR2(32);
  v_Aux NUMBER;
  v_recon_docstatus VARCHAR(60);
  v_recon_posted VARCHAR(60);

  p_replacefinactrx_ID VARCHAR(32);

  BEGIN
    IF(p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
      v_ResultStr:='PInstanceNotFound';
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
      -- Get Parameters
      v_ResultStr:='ReadingParameters';
      FOR Cur_Parameter IN
        (SELECT i.Record_ID,i.AD_User_ID, i.AD_Client_ID, p.ParameterName, p.P_String, p.P_Date 
         FROM AD_PInstance i
           LEFT JOIN AD_PInstance_Para p ON i.AD_PInstance_ID=p.AD_PInstance_ID
         WHERE i.AD_PInstance_ID=p_PInstance_ID
         ORDER BY p.SeqNo) 
      LOOP
         IF (Cur_Parameter.ParameterName = 'replacefinactrx_id') THEN
             p_replacefinactrx_ID := Cur_Parameter.P_String;
	     DBMS_OUTPUT.PUT_LINE('  replacefinactrx_id=' || p_replacefinactrx_ID) ;
         ELSE
             DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
         END IF;

	  v_Record_ID:=Cur_Parameter.Record_ID;
          v_AD_User_ID:=Cur_Parameter.AD_User_ID;
      END LOOP; -- Get Parameter
    ELSE
      RAISE NO_DATA_FOUND;
    END IF;
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;

  BEGIN --BODY 

    SELECT *
      INTO Cur_finacc_transaction
      FROM FIN_Finacc_Transaction
    WHERE FIN_Finacc_Transaction_ID = v_Record_ID FOR UPDATE;

    SELECT *
      INTO Cur_replace_finacc_transaction
      FROM FIN_Finacc_Transaction
    WHERE FIN_Finacc_Transaction_ID = p_replacefinactrx_ID FOR UPDATE;

    SELECT docstatus, posted
      INTO v_recon_docstatus, v_recon_posted
      FROM FIN_Reconciliation
    WHERE FIN_Reconciliation_ID = Cur_finacc_transaction.FIN_Reconciliation_ID FOR UPDATE;

    IF(v_recon_docstatus NOT IN ('CO') OR v_recon_posted='Y') THEN
      RAISE_APPLICATION_ERROR(-20000, '@ActionNotAllowedHere@') ;
    END IF;

    IF(Cur_replace_finacc_transaction.FIN_Financial_Account_ID <> Cur_finacc_transaction.FIN_Financial_Account_ID
    OR Cur_replace_finacc_transaction.FIN_Finacc_Transaction_ID = Cur_finacc_transaction.FIN_Finacc_Transaction_ID
    OR Cur_replace_finacc_transaction.FIN_Reconciliation_ID IS NOT NULL
    OR Cur_replace_finacc_transaction.depositamt <> Cur_finacc_transaction.depositamt
    OR Cur_replace_finacc_transaction.paymentamt <> Cur_finacc_transaction.paymentamt) THEN
      RAISE_APPLICATION_ERROR(-20000, '@SCO_TrxReplaceInReconInvalidRepTrx@') ;
    END IF;

    UPDATE FIN_FINACC_TRANSACTION SET
    fin_reconciliation_id = Cur_finacc_transaction.FIN_Reconciliation_ID, status = 'RPPC'
    WHERE FIN_FINACC_TRANSACTION_ID=Cur_replace_finacc_transaction.FIN_FINACC_TRANSACTION_ID;

    IF(Cur_replace_finacc_transaction.FIN_Payment_ID IS NOT NULL) THEN
      UPDATE FIN_Payment
        SET status = 'RPPC'
      WHERE FIN_Payment_ID = Cur_replace_finacc_transaction.FIN_Payment_ID;
    END IF;
       
    UPDATE FIN_FINACC_TRANSACTION SET
    fin_reconciliation_id = NULL, status = (CASE WHEN paymentamt>depositamt  THEN 'PWNC' ELSE 'RDNC' END)
    WHERE FIN_FINACC_TRANSACTION_ID=Cur_finacc_transaction.FIN_FINACC_TRANSACTION_ID;

    IF(Cur_finacc_transaction.FIN_Payment_ID IS NOT NULL) THEN
      UPDATE FIN_Payment
        SET status = (CASE WHEN isreceipt = 'N' THEN 'PWNC' ELSE 'RDNC' END)
      WHERE FIN_Payment_ID = Cur_finacc_transaction.FIN_Payment_ID;
    END IF;

    v_Message:=v_Message || '@SCO_ReplaceInReconTrxSuccessful@';

    IF(p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
    ELSE
      DBMS_OUTPUT.PUT_LINE('Finished ' || v_Message) ;
    END IF;
    RETURN;
    
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  END IF;
--  RETURN;
END SCO_TRXREPLACEINRECON
]]></body>
    </function>
  </database>
