<?xml version="1.0"?>
  <database name="FUNCTION SWA_REQUIREMENT_VOID">
    <function name="SWA_REQUIREMENT_VOID" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistics
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32);
  v_Result NUMBER:=1; -- Success
  v_fromrequerimiento_id VARCHAR2(32);
  v_requirement_request_id VARCHAR2(32);
  v_swa_requirement_request_id VARCHAR2(32);
  is_requirement_trx char(1);
  v_isrequest char(1);
  v_reason VARCHAR2(300):= '';
  v_description VARCHAR2(2000);

-- Record Info
  v_orderApprovedState VARCHAR(32);
  Cur_Parameter RECORD;

BEGIN
    
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
    -- Get Parameters
    IF (p_PInstance_ID IS NULL) THEN
      RAISE NO_DATA_FOUND ;
    END IF;

    IF (p_PInstance_ID IS NOT NULL)THEN
      FOR Cur_Parameter IN
        (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String,
          p.P_Number, p.P_Date
        FROM AD_PINSTANCE i
        LEFT JOIN AD_PINSTANCE_PARA p
          ON i.AD_PInstance_ID=p.AD_PInstance_ID
        WHERE i.AD_PInstance_ID=p_PInstance_ID
        ORDER BY p.SeqNo
        )
      LOOP
        

        IF (Cur_Parameter.parametername = 'swa_reason_to_cancel') THEN
            v_reason:=COALESCE(Cur_Parameter.p_string,'');
        END IF;
      END LOOP; -- Get Parameter
    END IF;
    
    SELECT Record_ID, CreatedBy
      INTO v_Record_ID, v_User_ID
      FROM AD_PInstance
     WHERE AD_PInstance_ID = p_PInstance_ID;

   /**
    * Approve Sales Orders
    * Sales Order Column: c_order.em_ssa_disc_evaluation_status
    * c_order.em_ssa_disc_evaluation_status States:
    *   - DR: Requirement Book
    *   - CO: Requirement Completed
    *   - CL: Requirement Closed
    */

    SELECT status,swa_requirement_request_id,swa_fromrequerimiento_id,repositiontrx,swa_requirement_request_id,isrequest, requer_name
      INTO v_orderApprovedState,v_requirement_request_id,v_fromrequerimiento_id, is_requirement_trx, v_swa_requirement_request_id, v_isrequest, v_description
    FROM swa_requerimientoreposicion
    WHERE swa_requerimientoreposicion_id=v_Record_ID for update;

    --concatenando La descripcion con el motivo de Rechazo (Cancelado)
     v_description:= COALESCE(v_description,'') || ' - ' || COALESCE(v_reason,'');
    --
    
    IF (v_orderApprovedState LIKE 'VO') THEN
        v_Message := '@swa_requirement_reposition@';
        v_Result := 2; -- Warning
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
        RETURN;
    END IF; 

    IF (v_orderApprovedState LIKE 'CL') THEN
        v_Message := '@swa_requirement_reposition@';
        v_Result := 2; -- Warning
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
        RETURN;
    END IF; 
   

    IF(v_isrequest = 'Y')THEN --SOLICITUD DE TRANSFERENCIA
      --Actualizando Estado de Solicitud
      UPDATE swa_requerimientoreposicion 
         SET status='VO',
             request_status='CO_VO',
             description_evaluation = COALESCE(v_reason,'')
       WHERE swa_requerimientoreposicion_id=v_Record_ID;
      --Actualizando estado de las lineas
       UPDATE swa_requerepo_detail
        SET status='VO'
       WHERE swa_requerepo_detail_id IN (SELECT requerepo_from_line_id 
                                           FROM swa_requerepo_detail 
                                          WHERE swa_requerimientoreposicion_id = v_Record_ID
                                           AND requerepo_from_line_id IS NOT NULL
                                        );
       
    ELSE --ORDEN DE TRANSFERENCIA
       UPDATE swa_requerimientoreposicion 
          SET status='VO',
           description_evaluation = COALESCE(v_reason,'')
        WHERE swa_requerimientoreposicion_id=v_Record_ID;

       --si la Orden de Transferencia Tiene lineas asociadas a Solicitudes
       IF(v_swa_requirement_request_id is not null)THEN
          UPDATE swa_requerepo_detail
             SET status='VO'
           WHERE swa_requerepo_detail_id IN (SELECT requerepo_from_line_id 
                                           FROM swa_requerepo_detail 
                                          WHERE swa_requerimientoreposicion_id = v_Record_ID
                                           AND requerepo_from_line_id IS NOT NULL
                                        );
       END IF;


      --Actualizar el motivo de rechazo en la solicitud de transferencia
      IF(v_requirement_request_id is not null)THEN
        UPDATE swa_requerimientoreposicion
        set description_evaluation = COALESCE(v_reason,'')
        where swa_requerimientoreposicion_id = v_requirement_request_id;
      END IF;
      -------------------
    END IF;

    
    IF(is_requirement_trx = 'Y' AND v_fromrequerimiento_id IS NOT NULL) THEN --Si es una Orden de Recepcion
     UPDATE swa_requerimientoreposicion 
        SET generatetrx = 'N' 
      WHERE swa_requerimientoreposicion_id=v_fromrequerimiento_id;
    END IF;
        
    v_Message:='Terminated';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;

    EXCEPTION
    WHEN OTHERS THEN
      v_ResultStr:= '@ERROR=' || SQLERRM;
      IF(p_PInstance_ID IS NOT NULL) THEN
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
      END IF;

    RETURN;
END SWA_REQUIREMENT_VOID
]]></body>
    </function>
  </database>
