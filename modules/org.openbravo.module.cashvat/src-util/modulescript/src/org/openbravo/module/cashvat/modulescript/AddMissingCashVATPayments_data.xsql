<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SLU 
 * All portions are Copyright (C) 2014 Openbravo SLU 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->
<SqlClass name="AddMissingCashVATPaymentsData" package="org.openbravo.module.cashvat.modulescript">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="selectMissedPaymentDetails" type="preparedStatement" return="multiple">
    <SqlMethodComment>fin_payment_detail_id paying a cash vat invoice but not yet into c_invoicetax_cashvat table</SqlMethodComment>
    <Sql>
      <![CDATA[
	select i.c_invoice_id, i.ispaid, it.c_invoiceTax_id, fpsd.fin_payment_detail_id, c.stdprecision, round((fpd.amount + fpd.writeoffamt) * 100 / i.grandtotal, c.stdPrecision) as percentage
	from fin_payment_detail fpd
	inner join fin_payment_scheduledetail fpsd on (fpsd.fin_payment_detail_id = fpd.fin_payment_detail_id)
	inner join fin_payment_schedule fps on (fps.fin_payment_schedule_id = fpsd.fin_payment_schedule_invoice)
	inner join fin_payment fp on (fp.fin_payment_id = fpd.fin_payment_id)
	inner join c_invoice i on (fps.c_invoice_id = i.c_invoice_id)
	inner join c_currency c on (i.c_currency_id = c.c_currency_id)
	inner join c_invoicetax it on (it.c_invoice_id = i.c_invoice_id)
	inner join c_tax t on (t.c_tax_id = it.c_tax_id)
	where i.iscashvat = 'Y'
	and t.iscashvat = 'Y'
	and fp.c_currency_id = i.c_currency_id
	and not exists (select 1 from c_invoicetax_cashvat itcv where itcv.fin_payment_detail_id = fpsd.fin_payment_detail_id and it.c_invoicetax_id = itcv.c_invoicetax_id)
	and fp.status in ('RPR', 'PPM', 'PWNC', 'RDNC', 'RPPC', 'REM_CANCEL')
	order by i.c_invoice_id, c_invoicetax_id, fpd.created asc
      ]]>
    </Sql>
  </SqlMethod>
  <SqlMethod name="selectLastPaymentDetail" type="preparedStatement" return="multiple">
    <SqlMethodComment>last fin_payment_detail_id paying a cash vat invoice</SqlMethodComment>
    <Sql>
      <![CDATA[
	select fpsd.fin_payment_detail_id
	from fin_payment_detail fpd
	inner join fin_payment_scheduledetail fpsd on (fpsd.fin_payment_detail_id = fpd.fin_payment_detail_id)
	inner join fin_payment_schedule fps on (fps.fin_payment_schedule_id = fpsd.fin_payment_schedule_invoice)
	inner join fin_payment fp on (fp.fin_payment_id = fpd.fin_payment_id)
	inner join c_invoice i on (fps.c_invoice_id = i.c_invoice_id)
	inner join c_invoicetax it on (it.c_invoice_id = i.c_invoice_id)
	inner join c_tax t on (t.c_tax_id = it.c_tax_id)
	where i.iscashvat = 'Y'
	and t.iscashvat = 'Y'
	and not exists (select 1 from c_invoicetax_cashvat itcv where itcv.fin_payment_detail_id = fpsd.fin_payment_detail_id)
	and fp.status in ('RPR', 'PPM', 'PWNC', 'RDNC', 'RPPC', 'REM_CANCEL')
	and i.c_invoice_id = ?
	order by fpd.created desc
      ]]>
    </Sql>
    <Parameter name="invoiceId"/>
  </SqlMethod>
  <SqlMethod name="deleteCashVATInfoWithoutPaymentDetail" type="preparedStatement" return="rowCount">
    <SqlMethodComment>Delete Cash VAT Info without payment detail. We will populate later on</SqlMethodComment>
    <Sql>
      <![CDATA[
        delete from c_invoicetax_cashvat itcv
	where itcv.fin_payment_detail_id is null
      ]]>
    </Sql>
  </SqlMethod>
  <SqlMethod name="insertCashVATInfoNonLastPayment" type="preparedStatement" return="rowCount">
    <SqlMethodComment>Insert Cash VAT Info for non last payment</SqlMethodComment>
    <Sql>
      <![CDATA[
        INSERT INTO c_invoicetax_cashvat(
            c_invoicetax_cashvat_id, ad_client_id, ad_org_id, isactive, created, 
            createdby, updated, updatedby, c_invoicetax_id, percentage, taxamt, 
            taxbaseamt, fin_payment_detail_id)
	VALUES (get_uuid(), (select ad_client_id from c_invoicetax where c_invoicetax_id = ?), (select ad_org_id from c_invoicetax where c_invoicetax_id = ?), 'Y', now(), 
            '100', now(), '100', ?,  to_number(?), (select round(taxamt * to_number(?) / 100, to_number(?)) from c_invoicetax it where c_invoicetax_id = ?), 
            (select round(taxbaseamt * to_number(?) / 100, to_number(?)) from c_invoicetax where c_invoicetax_id = ?), ?)
      ]]>
    </Sql>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="percentage"/>
    <Parameter name="percentage"/>
    <Parameter name="stdPrecision"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="percentage"/>
    <Parameter name="stdPrecision"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="finPaymentDetailId"/>
  </SqlMethod>
<SqlMethod name="insertCashVATInfoLastPayment" type="preparedStatement" return="rowCount">
    <SqlMethodComment>Insert Cash VAT Info for last payment</SqlMethodComment>
    <Sql>
      <![CDATA[
        INSERT INTO c_invoicetax_cashvat(
            c_invoicetax_cashvat_id, ad_client_id, ad_org_id, isactive, created, 
            createdby, updated, updatedby, c_invoicetax_id, percentage,
	    taxamt, 
            taxbaseamt, 
	    fin_payment_detail_id)
	VALUES (get_uuid(), (select ad_client_id from c_invoicetax where c_invoicetax_id = ?), (select ad_org_id from c_invoicetax where c_invoicetax_id = ?), 'Y', now(), 
            '100', now(), '100', ?, (select 100-coalesce(sum(percentage), 0) from c_invoicetax_cashvat where c_invoicetax_id = ?), 
            (select max(it.taxamt) - coalesce(sum(itcv.taxamt), 0) from c_invoicetax it left join c_invoicetax_cashvat itcv on (it.c_invoicetax_id = itcv.c_invoicetax_id)
                left join fin_payment_detail fpd on (fpd.fin_payment_detail_id = itcv.fin_payment_detail_id) 
		left join fin_payment fp on (fp.fin_payment_id = fpd.fin_payment_id and fp.status in ('RPR', 'PPM', 'PWNC', 'RDNC', 'RPPC', 'REM_CANCEL'))
		where it.c_invoicetax_id = ? ), 
            (select max(it.taxbaseamt) - coalesce(sum(itcv.taxbaseamt), 0) from c_invoicetax it left join c_invoicetax_cashvat itcv on (it.c_invoicetax_id = itcv.c_invoicetax_id)
                left join fin_payment_detail fpd on (fpd.fin_payment_detail_id = itcv.fin_payment_detail_id) 
		left join fin_payment fp on (fp.fin_payment_id = fpd.fin_payment_id and fp.status in ('RPR', 'PPM', 'PWNC', 'RDNC', 'RPPC', 'REM_CANCEL'))
		where it.c_invoicetax_id = ? ),
	    ?)
      ]]>
    </Sql>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="invoiceTaxId"/>
    <Parameter name="finPaymentDetailId"/>
  </SqlMethod>
</SqlClass>
