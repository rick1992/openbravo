<?xml version="1.0"?>
  <database name="TRIGGER C_BPARTNER_LOCATION_TRG">
    <trigger name="C_BPARTNER_LOCATION_TRG" table="C_BPARTNER_LOCATION" fires="before" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[
    --v_City    VARCHAR2(60);
    --v_Address1   VARCHAR2(60);
    --v_Address2   VARCHAR2(60);
    v_name NVARCHAR2(60) ;
    v_DateNull DATE := TO_DATE('01-01-1900', 'DD-MM-YYYY');
    
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;

  IF(UPDATING) THEN
    IF NOT(COALESCE(:old.C_Location_ID, '0') <> COALESCE(:NEW.C_Location_ID, '0') OR COALESCE(:old.Updated, v_DateNull) <> COALESCE(:NEW.Updated, v_DateNull)) THEN
      RETURN;
    END IF;
  END IF;
  /* -- Get Address Info
  SELECT City, Address1, Address2
  INTO v_City, v_Address1, v_Address2
  FROM  C_Location
  WHERE  C_Location_ID=:new.C_Location_ID;
  -- No City
  IF (v_City IS NULL) THEN
  v_City:=v_Address1;
  END IF;
  -- No City nor Address 1
  IF (v_City IS NULL) THEN
  v_City:='-';
  DBMS_OUTPUT.PUT_LINE('No Address Info ID=' || :new.C_BPartner_Location_ID);
  END IF;
  */
  -- Set Name
  --IF TG_OP = 'DELETE' THEN
  --  v_name:=old.Name;
  --ELSE
  --  v_name:=new.Name;
  --END IF;
  --IF(SUBSTR(v_name, 1, 1)='.') THEN
  --  new.Name:='.'||C_Location_Name(new.C_Location_ID);
  --END IF;

  IF(INSERTING) THEN
    IF(:NEW.c_location_id IS NOT NULL) THEN
      :new.Name:=C_Location_Name(:new.C_Location_ID);
    END IF;
  ELSIF(UPDATING) THEN
    IF(COALESCE(:OLD.C_Location_ID,'.')<>COALESCE(:NEW.C_Location_ID,'.') OR :NEW.Name <> C_Location_Name(:new.C_Location_ID)) THEN
      :new.Name:=C_Location_Name(:new.C_Location_ID);
    END IF;
  END IF;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Not unique - ' || SQLERRM) ;
END C_BPARTNER_LOCATION_TRG
]]></body>
    </trigger>
  </database>
