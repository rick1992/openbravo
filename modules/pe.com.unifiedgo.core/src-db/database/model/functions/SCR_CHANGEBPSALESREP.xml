<?xml version="1.0"?>
  <database name="FUNCTION SCR_CHANGEBPSALESREP">
    <function name="SCR_CHANGEBPSALESREP" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_AD_User_ID VARCHAR2(32):='0';
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_Transaction RECORD;
    Cur_Product RECORD;
    v_NextNo VARCHAR2(32) ;
    v_count NUMBER;
    v_PInstance_Log_ID VARCHAR2(32);
    v_Client_ID VARCHAR2(32);
    v_Aux NUMBER;

  
    v_ad_client_ID VARCHAR(32);
    v_ad_org_ID VARCHAR(32);

    p_ad_org_id VARCHAR(32);
    p_fromsalesrep_id VARCHAR(32);
    p_tosalesrep_id VARCHAR(32);

    v_salesrep_client_id VARCHAR(32);
    v_salesrep_org_id VARCHAR(32);
  BEGIN
    IF(p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
      v_ResultStr:='PInstanceNotFound';
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
      -- Get Parameters
      v_ResultStr:='ReadingParameters';
      FOR Cur_Parameter IN
        (SELECT i.Record_ID,i.AD_User_ID, i.AD_Client_ID, p.ParameterName, p.P_String, p.P_Date 
         FROM AD_PInstance i
           LEFT JOIN AD_PInstance_Para p ON i.AD_PInstance_ID=p.AD_PInstance_ID
         WHERE i.AD_PInstance_ID=p_PInstance_ID
         ORDER BY p.SeqNo) 
      LOOP
           IF (Cur_Parameter.ParameterName = 'ad_org_id') THEN
               p_ad_org_id := Cur_Parameter.P_String;
	       DBMS_OUTPUT.PUT_LINE('  ad_org_id=' || p_ad_org_id) ;
           ELSIF (Cur_Parameter.ParameterName = 'fromsalesrep_id') THEN
               p_fromsalesrep_id := Cur_Parameter.P_String;
	       DBMS_OUTPUT.PUT_LINE('  fromsalesrep_id=' || p_fromsalesrep_id) ;
           ELSIF (Cur_Parameter.ParameterName = 'tosalesrep_id') THEN
               p_tosalesrep_id := Cur_Parameter.P_String;
	       DBMS_OUTPUT.PUT_LINE('  tosalesrep_id=' || p_tosalesrep_id) ;
           ELSE
               DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
           END IF;
	  v_Record_ID:=Cur_Parameter.Record_ID;
          v_AD_User_ID:=Cur_Parameter.AD_User_ID;
      END LOOP; -- Get Parameter
    ELSE
      RAISE NO_DATA_FOUND;
    END IF;
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;

  BEGIN --BODY 

    IF(p_ad_org_id IS NULL OR p_fromsalesrep_id IS NULL OR p_tosalesrep_id IS NULL) THEN
      RAISE_APPLICATION_ERROR(-20000, '@SCO_InternalError@');
    END IF;

    SELECT ad_client_id, ad_org_id
      INTO v_salesrep_client_id, v_salesrep_org_id
      FROM AD_User
    WHERE AD_User_ID = p_fromsalesrep_id;

    IF(AD_ISORGINCLUDED(v_salesrep_org_id, p_ad_org_id,v_salesrep_client_id ) = -1) THEN
      RAISE_APPLICATION_ERROR(-20000, '@SCR_ChangeBPSalesRepInvalidFromSalesRep@');
    END IF;

    SELECT ad_client_id, ad_org_id
      INTO v_salesrep_client_id, v_salesrep_org_id
      FROM AD_User
    WHERE AD_User_ID = p_tosalesrep_id;

    IF(AD_ISORGINCLUDED(v_salesrep_org_id, p_ad_org_id,v_salesrep_client_id ) = -1) THEN
      RAISE_APPLICATION_ERROR(-20000, '@SCR_ChangeBPSalesRepInvalidToSalesRep@');
    END IF;

    UPDATE C_Bpartner SET em_ssa_user_salesrep_id = p_tosalesrep_id
    WHERE AD_ISORGINCLUDED(ad_org_id, p_ad_org_id, ad_client_id) <> -1
    AND em_ssa_user_salesrep_id = p_fromsalesrep_id;

    GET DIAGNOSTICS v_count = ROW_COUNT;

    v_Message:=v_Message || '@SCR_ChangeBPSalesRepSuccessful@' || v_count;

    IF(p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
    ELSE
      DBMS_OUTPUT.PUT_LINE('Finished ' || v_Message) ;
    END IF;
    RETURN;
    
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  END IF;
--  RETURN;
END SCR_CHANGEBPSALESREP
]]></body>
    </function>
  </database>
