<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2001-2012 Openbravo SLU
 * All Rights Reserved.
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->

<SqlClass name="ReportGeneralLedgerData" package="pe.com.unifiedgo.report.ad_reports">
  <SqlClassComment></SqlClassComment>

  
  <SqlMethod name="select2ugo" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT 
        
        '' as C_INVOICE_ID,
        '' as digitos2,'' as digitos3,'' as digitos4,'' as digitos5,'' as digitos6,'' as digitos7,'' as digitos8,0 as seqno,
        
        *,0 as balancedr,0 as balancecr
        FROM ( SELECT '0' AS RN1, C.* FROM (
          SELECT VALUE, NAME, DATEACCT,
              COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR, COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL,
              MAX(FACT_ACCT_ID) AS FACT_ACCT_ID,
              FACT_ACCT_GROUP_ID, ID, groupbyid, groupbyname,
              DESCRIPTION,nreg , ISDEBIT,
              0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB,
              0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL,
              0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL,
              TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER,
              ? AS groupby, '' as bpid, '' as bpname, '' as pdid, '' as pdname, '' as pjid, '' as pjname, factaccttype
              , 0 AS AMTACCTDRPREVSUM, 0 AS AMTACCTCRPREVSUM, 
              '' AS CENCOS, CURRENCYCODE, PHYSICALDOCUMENT, TDCOMP,FECEMI, FECVENC, TDBP,RUCBP,
              
              '' as idperiodo,  '' as periodo, '' as fechainicial, '' as fechafinal, '' as idorganizacion,
              '' as idlibro, '' as nombrelibro   
             
          FROM
            (SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME,
                FACT_ACCT.DATEACCT, AMTACCTDR, AMTACCTCR, FACT_ACCT_ID,
                FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,FACT_ACCT.em_sco_regnumber nreg ,
                C.c_bpartner_id, C.C_INVOICE_ID,
                CASE ?
                  WHEN 'BPartner' THEN c_bpartner.c_bpartner_id
                  WHEN 'Product' THEN m_product.m_product_id
                  ELSE '' END AS groupbyid,
                CASE ?
                  WHEN 'BPartner' THEN (select to_char(name) from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id)
                  WHEN 'Product' THEN (select to_char(value || ' - ' || name) from m_product p where p.m_product_id = m_product.m_product_id)
                    ELSE '' END AS groupbyname,
                CASE WHEN AMTACCTDR <> 0 THEN 'Y' ELSE 'N' END AS ISDEBIT, 
                CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'D' THEN 4 ELSE 5 END) END) END) END AS FACTACCTTYPE,
                
      (CASE
        WHEN FACT_ACCT.C_CURRENCY_ID='100' THEN 2
        WHEN FACT_ACCT.C_CURRENCY_ID='308' THEN 1
        ELSE 9
        END) AS CURRENCYCODE,
      (CASE WHEN C.c_bpartner_id IS NOT NULL THEN
        (SELECT CODE FROM scr_combo_item ci INNER JOIN c_bpartner bp ON 
        ci.scr_combo_item_id = bp.em_scr_combo_item_id WHERE bp.c_bpartner_id=C.c_bpartner_id)
      ELSE ''
      END) AS TDBP,
       (CASE WHEN C.c_bpartner_id IS NOT NULL THEN
        (SELECT TAXID FROM c_bpartner bp WHERE bp.c_bpartner_id=C.c_bpartner_id )
      ELSE ''
      END) AS RUCBP,
      (CASE 
        WHEN C.issotrx='Y' THEN
        (CASE (SELECT dt.NAME FROM C_DOCTYPE dt INNER JOIN C_INVOICE inv ON 
            dt.C_DOCTYPE_ID = inv.C_DOCTYPE_ID WHERE inv.C_INVOICE_ID=C.C_INVOICE_ID ) WHEN
           'AR Invoice' THEN '01' WHEN 'AR Ticket' THEN '03' WHEN 'AR Credit Memo' THEN '07' WHEN 'Return Material Sales Invoice' THEN '07' WHEN 'AR Debit Memo' THEN '08' else '' 
        end) 
        WHEN C.issotrx='N' THEN
            (SELECT dt.CODE FROM scr_combo_item dt INNER JOIN C_INVOICE inv ON 
            dt.scr_combo_item_id = inv.em_sco_podoctype_comboitem_id WHERE inv.C_INVOICE_ID=C.C_INVOICE_ID)
      ELSE '' end) as TDCOMP,
       
       (CASE
        WHEN C.em_scr_physical_documentno IS NOT NULL THEN C.em_scr_physical_documentno
        ELSE ''
        END) AS PHYSICALDOCUMENT,
       
       (CASE 
         WHEN C.em_sco_firstduedate IS NOT NULL THEN C.em_sco_firstduedate
         ELSE NULL
         END) AS FECVENC, 
         
       (CASE 
         WHEN C.ISSOTRX = 'Y' THEN C.dateacct
         WHEN C.ISSOTRX = 'N' THEN C.em_sco_newdateinvoiced
         ELSE FACT_ACCT.dateacct
         END) AS FECEMI
         
                
            FROM FACT_ACCT
              INNER JOIN c_period CP ON fact_acct.C_PERIOD_ID=CP.c_period_id
            
              LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
              LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
             
              LEFT JOIN C_INVOICE C ON C.C_INVOICE_ID = FACT_ACCT.RECORD_ID 
              
            WHERE       
            (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                      SELECT c_elementvalue_id as name
                      FROM C_ELEMENTVALUE
                      WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and c_elementvalue.ELEMENTLEVEL = 'S'
                    ))
             
              AND FACT_ACCT.AD_ORG_ID IN ('1')
              AND FACT_ACCT.AD_CLIENT_ID IN ('1')
              AND 1=1
              AND  FACT_ACCT.AD_ORG_ID IN ('2')
              AND 2=2
              AND 3=3) D
            WHERE 6=6
            GROUP BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, DESCRIPTION, nreg , ISDEBIT,
            c_bpartner_id, C_INVOICE_ID,
            CURRENCYCODE, PHYSICALDOCUMENT, TDCOMP,FECEMI, FECVENC, TDBP,RUCBP, CENCOS
            HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
            ORDER  BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID,  FACT_ACCT_ID, DESCRIPTION, ISDEBIT
          ) C
        ) B WHERE 1=1
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
    <Parameter name="groupbytext"/>
    <Parameter name="groupby"/>
    <Parameter name="groupby"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) >= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) <= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>

    <Parameter name="accountId" optional="true" after="WHERE 6=6"><![CDATA[AND ID = ? ]]></Parameter>
    <Parameter name="cBPartner" optional="true" after="WHERE 6=6"><![CDATA[AND groupbyid = ? ]]></Parameter>
    <Parameter name="pgLimit" type="argument" optional="true" after=",  FACT_ACCT_ID, DESCRIPTION, ISDEBIT"><![CDATA[ LIMIT ]]></Parameter>
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
  </SqlMethod>
  
  
  
  
  
  
	<SqlMethod name="select2ugoAll" type="preparedStatement" return="multiple">
		<SqlMethodComment></SqlMethodComment>
		<Sql>
			<![CDATA[
				SELECT '' as C_INVOICE_ID, '' as digitos2,'' as digitos3,'' as digitos4,'' as digitos5,'' as digitos6, 
				'' as digitos7, '' as digitos8, 0 as seqno, *, 0 as balancedr, 0 as balancecr 
				FROM ( SELECT '0' AS RN1, 
					C.* FROM (
						SELECT VALUE, NAME, DATEACCT, COALESCE((AMTACCTDR),0) AS AMTACCTDR, COALESCE((AMTACCTCR),0) AS AMTACCTCR, 
						COALESCE((AMTACCTDR-AMTACCTCR),0) AS TOTAL, (FACT_ACCT_ID) AS FACT_ACCT_ID, FACT_ACCT_GROUP_ID, 
						ID, groupbyid, groupbyname, DESCRIPTION, nreg , ISDEBIT, 0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB, 
						0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL, 0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL, 
						TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER, ? AS groupby, '' as bpid, '' as bpname, '' as pdid, '' as pdname, 
						'' as pjid, '' as pjname, factaccttype , 0 AS AMTACCTDRPREVSUM, 0 AS AMTACCTCRPREVSUM, '' AS CENCOS, 
						CURRENCYCODE, PHYSICALDOCUMENT, TDCOMP, FECEMI, FECVENC, TDBP, RUCBP, '' as idperiodo, '' as periodo, 
						'' as fechainicial, '' as fechafinal, '' as idorganizacion, '' as idlibro, '' as nombrelibro 
						
						FROM (
							SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME, FACT_ACCT.DATEACCT, 
							AMTACCTDR, AMTACCTCR, FACT_ACCT_ID, FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, 
							FACT_ACCT.DESCRIPTION,FACT_ACCT.em_sco_regnumber nreg, C.c_bpartner_id, C.C_INVOICE_ID, 
							CASE ? 
								WHEN 'BPartner' THEN c_bpartner.c_bpartner_id 
								WHEN 'Product' THEN m_product.m_product_id ELSE '' END AS groupbyid, 
							CASE ? 
								WHEN 'BPartner' THEN (select to_char(name) from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id) 
								WHEN 'Product' THEN (select to_char(value || ' - ' || name) from m_product p where p.m_product_id = m_product.m_product_id) 
								ELSE '' END AS groupbyname, 
							CASE 
								WHEN AMTACCTDR <> 0 THEN 'Y' ELSE 'N' END AS ISDEBIT, 
							CASE 
								WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 
								ELSE (CASE 
										WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 
										ELSE (CASE 
												WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 
												ELSE (CASE 
														WHEN FACT_ACCT.FACTACCTTYPE = 'D' THEN 4 
														ELSE 5 END)
												END)
										END)
								END AS FACTACCTTYPE, 
							(CASE 
								WHEN FACT_ACCT.C_CURRENCY_ID='100' THEN 2 
								WHEN FACT_ACCT.C_CURRENCY_ID='308' THEN 1 
								ELSE 9 END) AS CURRENCYCODE, 
							(CASE 
								WHEN C.c_bpartner_id IS NOT NULL THEN (SELECT CODE FROM scr_combo_item ci 
																		INNER JOIN c_bpartner bp ON ci.scr_combo_item_id = bp.em_scr_combo_item_id 
																		WHERE bp.c_bpartner_id=C.c_bpartner_id) 
								ELSE '' END) AS TDBP, 
							(CASE 
								WHEN C.c_bpartner_id IS NOT NULL THEN (SELECT TAXID FROM c_bpartner bp WHERE bp.c_bpartner_id=C.c_bpartner_id ) 
								ELSE '' END) AS RUCBP, 
							(CASE 
								WHEN C.issotrx='Y' THEN 
        (CASE (SELECT dt.NAME FROM C_DOCTYPE dt INNER JOIN C_INVOICE inv ON 
            dt.C_DOCTYPE_ID = inv.C_DOCTYPE_ID WHERE inv.C_INVOICE_ID=C.C_INVOICE_ID ) WHEN
           'AR Invoice' THEN '01' WHEN 'AR Ticket' THEN '03' WHEN 'AR Credit Memo' THEN '07' WHEN 'Return Material Sales Invoice' THEN '07' WHEN 'AR Debit Memo' THEN '08' else '' 
        end) 
        WHEN C.issotrx='N' THEN
            (SELECT dt.CODE FROM scr_combo_item dt INNER JOIN C_INVOICE inv ON 
            dt.scr_combo_item_id = inv.em_sco_podoctype_comboitem_id WHERE inv.C_INVOICE_ID=C.C_INVOICE_ID)
      ELSE '' end) as TDCOMP,
       
       (CASE
        WHEN C.em_scr_physical_documentno IS NOT NULL THEN C.em_scr_physical_documentno
        ELSE ''
        END) AS PHYSICALDOCUMENT,
       
       (CASE 
         WHEN C.em_sco_firstduedate IS NOT NULL THEN C.em_sco_firstduedate
         ELSE NULL
         END) AS FECVENC, 
         
       (CASE 
         WHEN C.ISSOTRX = 'Y' THEN C.dateacct
         WHEN C.ISSOTRX = 'N' THEN C.em_sco_newdateinvoiced
         ELSE FACT_ACCT.dateacct
         END) AS FECEMI
         
                
            FROM FACT_ACCT
              INNER JOIN c_period CP ON fact_acct.C_PERIOD_ID=CP.c_period_id
            
              LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
              LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
             
              LEFT JOIN C_INVOICE C ON C.C_INVOICE_ID = FACT_ACCT.RECORD_ID 
              
            WHERE       
            (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                      SELECT c_elementvalue_id as name
                      FROM C_ELEMENTVALUE
                      WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and c_elementvalue.ELEMENTLEVEL = 'S'
                    ))
             
              AND FACT_ACCT.AD_ORG_ID IN ('1') 
              AND FACT_ACCT.AD_CLIENT_ID IN ('1') 
              AND 1=1 
              AND  FACT_ACCT.AD_ORG_ID IN ('2') 
              AND 2=2 
              AND 3=3) D 
            WHERE 6=6 
            
            ORDER  BY groupbyname, groupbyid, VALUE, NAME, ID, DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, 
            FACT_ACCT_ID, DESCRIPTION, ISDEBIT 
          ) C 
        ) B WHERE 1=1 
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
    <Parameter name="groupbytext"/>
    <Parameter name="groupby"/>
    <Parameter name="groupby"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) >= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) <= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>

    <Parameter name="accountId" optional="true" after="WHERE 6=6"><![CDATA[AND ID = ? ]]></Parameter>
    <Parameter name="cBPartner" optional="true" after="WHERE 6=6"><![CDATA[AND groupbyid = ? ]]></Parameter>
    
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
  </SqlMethod>
  
  
  
  
  
  
  
  
  
    <SqlMethod name="selectMovimientosAjuste" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        
		select  fa.acctvalue as value ,fa.acctdescription as name,fa.dateacct , fa.em_sco_regnumber as nreg ,fa.description,
		 	CASE WHEN fa.FACTACCTTYPE = 'O' THEN 1
			 WHEN fa.FACTACCTTYPE = 'N' THEN 2
			 WHEN fa.FACTACCTTYPE = 'R' THEN 3
			 WHEN fa.FACTACCTTYPE = 'D' THEN 4
			ELSE 5 END AS FACTACCTTYPE,
		 
		 sum(amtacctdr) as amtacctdr, sum(amtacctcr)   as amtacctcr
 		from fact_acct fa
		inner join c_period cp on cp.c_period_id = fa.c_period_id
        where 
        cp.periodType = 'A' and 
        fa.ad_org_id in ('1')
        and fa.ad_client_id in ('1') 
        AND 1=1
        
        group by 1,2,3,4,5,6
		order by 1

      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="fa.ad_org_id in (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="fa.ad_client_id in (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND fa.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="fechaAjuste" optional="true" after="AND 1=1"><![CDATA[AND trunc(fa.DATEACCT) = trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parCuentaDesde" optional="true" after="AND 1=1"><![CDATA[ AND  fa.acctvalue >= (select value from c_elementvalue where c_elementvalue_id=? ) ]]></Parameter>
    <Parameter name="parCuentaHasta" optional="true" after="AND 1=1"><![CDATA[ AND  fa.acctvalue <= (select value from c_elementvalue where c_elementvalue_id=? ) ]]></Parameter>
    
  </SqlMethod>
  
	<SqlMethod name="selectMovimientosAjusteAll" type="preparedStatement" return="multiple">
		<SqlMethodComment></SqlMethodComment>
		<Sql>
			<![CDATA[
				select fa.acctvalue as value, fa.acctdescription as name, fa.dateacct, fa.em_sco_regnumber as nreg, 
				fa.description, 
				CASE 
					WHEN fa.FACTACCTTYPE = 'O' THEN 1 
					WHEN fa.FACTACCTTYPE = 'N' THEN 2 
					WHEN fa.FACTACCTTYPE = 'R' THEN 3 
					WHEN fa.FACTACCTTYPE = 'D' THEN 4 
					ELSE 5 END AS FACTACCTTYPE, 
				(amtacctdr) as amtacctdr, (amtacctcr) as amtacctcr 
				
				from fact_acct fa 
				inner join c_period cp on cp.c_period_id = fa.c_period_id 
				
				where cp.periodType = 'A' and 
				fa.ad_org_id in ('1') 
				and fa.ad_client_id in ('1') 
				AND 1=1 
				order by 1 
			]]>
		</Sql>
		<Field name="rownum" value="count"/>
		<Parameter name="adUserOrg" type="replace" optional="true" after="fa.ad_org_id in (" text="'1'"/>
		<Parameter name="adUserClient" type="replace" optional="true" after="fa.ad_client_id in (" text="'1'"/>
		<Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND fa.C_ACCTSCHEMA_ID = ? ]]></Parameter>
		<Parameter name="fechaAjuste" optional="true" after="AND 1=1"><![CDATA[AND trunc(fa.DATEACCT) = trunc(TO_DATE(?)) ]]></Parameter>
		<Parameter name="parCuentaDesde" optional="true" after="AND 1=1"><![CDATA[ AND  fa.acctvalue >= (select value from c_elementvalue where c_elementvalue_id=? ) ]]></Parameter>
		<Parameter name="parCuentaHasta" optional="true" after="AND 1=1"><![CDATA[ AND  fa.acctvalue <= (select value from c_elementvalue where c_elementvalue_id=? ) ]]></Parameter>
	</SqlMethod>
  
  
  
  
 
  
  
  
  <SqlMethod name="selectSaldoAnterior" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      
	select   fa.account_id as id,acctvalue as value, 
		acctdescription as name,
			CASE
		WHEN SUM (amtacctdr) - SUM (amtacctcr) > 0 THEN
			SUM (amtacctdr) - SUM (amtacctcr)
		ELSE
			0
		END balancedr,
		 CASE
		WHEN SUM (amtacctcr) - SUM (amtacctdr) > 0 THEN
			SUM (amtacctcr) - SUM (amtacctdr)
		ELSE
			0
		END balancecr
		 from fact_acct fa 
		where  0=0
		AND fa.AD_ORG_ID IN ('1')
		AND fa.AD_CLIENT_ID IN ('1')
		
		
		AND (
            CASE WHEN TO_DATE(?) = TO_DATE(?) THEN factaccttype = 'O' AND     trunc(fa.dateacct) = to_date(?) 
            ELSE factaccttype in ( 'O' ,'N') AND (to_date(?)) <= trunc(fa.dateacct)   AND trunc(fa.dateacct) < trunc(to_date(?))
            END
        )
		

		
		AND 1=1
				
		GROUP BY 1,2,3
		order by 2,3
       
      ]]></Sql>
    <Field name="rownum" value="count"/>

    <Parameter name="adUserOrg" type="replace" optional="true" after="AND fa.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND fa.AD_CLIENT_ID IN (" text="'1'"/>
   
    <Parameter name="parDateInicioAnio" ></Parameter>
    <Parameter name="parDateTo" ></Parameter>
    <Parameter name="parDateTo" ></Parameter>
    
    <Parameter name="parDateInicioAnio" ></Parameter>
    <Parameter name="parDateTo" ></Parameter>
    
    <Parameter name="parCuentaDesde" optional="true" after="AND 1=1"><![CDATA[ AND  fa.acctvalue >= (select value from c_elementvalue where c_elementvalue_id=? ) ]]></Parameter>
    <Parameter name="parCuentaHasta" optional="true" after="AND 1=1"><![CDATA[ AND  fa.acctvalue <= (select value from c_elementvalue where c_elementvalue_id=? ) ]]></Parameter>
    
  </SqlMethod>
  
  
  <SqlMethod name="selectSaldoAnteriorAjuste" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      
	select   fa.account_id as id,acctvalue as value, 
		acctdescription as name,
			CASE
		WHEN SUM (amtacctdr) - SUM (amtacctcr) > 0 THEN
			SUM (amtacctdr) - SUM (amtacctcr)
		ELSE
			0
		END balancedr,
		 CASE
		WHEN SUM (amtacctcr) - SUM (amtacctdr) > 0 THEN
			SUM (amtacctcr) - SUM (amtacctdr)
		ELSE
			0
		END balancecr
		 from fact_acct fa 
		 inner join c_period cp on cp.c_period_id  = fa.c_period_id
		where  cp.periodType = 'S'
		AND fa.AD_ORG_ID IN ('1')
		AND fa.AD_CLIENT_ID IN ('1')
		
		AND trunc(fa.dateacct) >= trunc(to_date(?))	AND trunc(fa.dateacct) < trunc(to_date(?))
		
		AND 1=1
				
		GROUP BY 1,2,3
		order by 2,3
       
      ]]></Sql>
    <Field name="rownum" value="count"/>

    <Parameter name="adUserOrg" type="replace" optional="true" after="AND fa.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND fa.AD_CLIENT_ID IN (" text="'1'"/>
   
    <Parameter name="parDateInicioAnio" ></Parameter>
    <Parameter name="parDateFInAnio" ></Parameter>
    
    <Parameter name="parCuentaDesde" optional="true" after="AND 1=1"><![CDATA[ AND  fa.acctvalue >= (select value from c_elementvalue where c_elementvalue_id=? ) ]]></Parameter>
    <Parameter name="parCuentaHasta" optional="true" after="AND 1=1"><![CDATA[ AND  fa.acctvalue <= (select value from c_elementvalue where c_elementvalue_id=? ) ]]></Parameter>
    
  </SqlMethod>
  
  

  
	<SqlMethod name="select2ugoforple" type="preparedStatement" return="multiple">
		<SqlMethodComment></SqlMethodComment>
		<Sql>
			<![CDATA[
				SELECT C_INVOICE_ID, VALUE, NAME, DATEACCT, 
				COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR, 
				COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL, 
				MAX(FACT_ACCT_ID) AS FACT_ACCT_ID, 
				MAX(SEQNO) as SEQNO, 
				FACT_ACCT_GROUP_ID, ID, 
				DESCRIPTION,nreg , ISDEBIT, 
				0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB, 
				0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL, 
				0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL, 
				TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER, 
				'' as bpid, '' as bpname, '' as pdid, '' as pdname, '' as pjid, '' as pjname, factaccttype, 
				0 AS AMTACCTDRPREVSUM, 0 AS AMTACCTCRPREVSUM, 
				'' AS CENCOS, CURRENCYCODE, PHYSICALDOCUMENT, TDCOMP,FECEMI, FECVENC, TDBP,RUCBP, 
				'' as idperiodo,  '' as periodo, '' as fechainicial, '' as fechafinal, '' as idorganizacion, 
				'' as idlibro, '' as nombrelibro 
				
				FROM (
					SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME, 
					FACT_ACCT.DATEACCT, AMTACCTDR, AMTACCTCR, FACT_ACCT_ID, 
					FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,FACT_ACCT.em_sco_regnumber nreg, 
					C.c_bpartner_id, C.C_INVOICE_ID, 
					
					CASE WHEN AMTACCTDR <> 0 THEN 'Y' ELSE 'N' END AS ISDEBIT, 
					CASE 
						WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 
						ELSE (CASE 
									WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 
									ELSE (CASE 
												WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 
												ELSE (CASE 
															WHEN FACT_ACCT.FACTACCTTYPE = 'D' THEN 4 
															ELSE 5 END) 
												END) 
									END) 
						END AS FACTACCTTYPE, 
					
					case FACT_ACCT.factaccttype when 'O' then 'A' when 'N' then 'M' when 'R' then 'C' when 'D' then 'M' else FACT_ACCT.factaccttype end || 
						case when coalesce(FACT_ACCT.em_sco_seqno, 0) > 99999 then to_char(FACT_ACCT.em_sco_seqno) else coalesce(lpad(to_char(FACT_ACCT.em_sco_seqno), 5, '0'), '00000') end as seqno ,
              (CASE
            WHEN FACT_ACCT.C_CURRENCY_ID='100' THEN 2
            WHEN FACT_ACCT.C_CURRENCY_ID='308' THEN 1
            ELSE 9
            END) AS CURRENCYCODE,
              (CASE WHEN C.c_bpartner_id IS NOT NULL THEN
            ci.CODE
              ELSE ''
              END) AS TDBP,
               (CASE WHEN C.c_bpartner_id IS NOT NULL THEN
            C_BPARTNER.TAXID
              ELSE ''
            END) AS RUCBP,
              (CASE 
            WHEN C.issotrx='Y' THEN
            (CASE dt.NAME WHEN
               'AR Invoice' THEN '01' WHEN 'AR Ticket' THEN '03' WHEN 'AR Credit Memo' THEN '07' WHEN 'Return Material Sales Invoice' THEN '07' WHEN 'AR Debit Memo' THEN '08' else '' 
            end) 
            WHEN C.issotrx='N' THEN
                cipo.CODE
              ELSE '' end) as TDCOMP,
       
               (CASE
                WHEN C.em_scr_physical_documentno IS NOT NULL THEN C.em_scr_physical_documentno
                ELSE ''
            END) AS PHYSICALDOCUMENT,
       
           (CASE 
         WHEN C.ISSOTRX = 'Y' THEN C.dateacct
         WHEN C.ISSOTRX = 'N' THEN C.em_sco_newdateinvoiced
         ELSE FACT_ACCT.dateacct
         END) AS FECVENC, 
         
           (CASE 
         WHEN C.ISSOTRX = 'Y' THEN C.dateacct
         WHEN C.ISSOTRX = 'N' THEN C.em_sco_newdateinvoiced
         ELSE FACT_ACCT.dateacct
         END) AS FECEMI
         
                
            FROM FACT_ACCT
             LEFT JOIN C_INVOICE C ON C.C_INVOICE_ID = FACT_ACCT.RECORD_ID
              
        LEFT JOIN C_BPARTNER ON C.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
        LEFT JOIN scr_combo_item ci ON ci.scr_combo_item_id = C_BPARTNER.em_scr_combo_item_id
        LEFT JOIN C_DOCTYPE dt ON dt.C_DOCTYPE_ID = C.C_DOCTYPE_ID
        LEFT JOIN scr_combo_item cipo ON cipo.scr_combo_item_id = C.em_sco_podoctype_comboitem_id 
            WHERE 
              'BAIT'='BAIT' 
              AND FACT_ACCT.AD_ORG_ID IN ('1')
              AND FACT_ACCT.AD_CLIENT_ID IN ('1')
              AND 1=1
            
              AND  FACT_ACCT.AD_ORG_ID IN ('2')
              AND 2=2
              AND 3=3) D
           
            GROUP BY VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, DESCRIPTION, nreg , ISDEBIT,
            c_bpartner_id, C_INVOICE_ID,
            CURRENCYCODE, PHYSICALDOCUMENT, TDCOMP,FECEMI, FECVENC, TDBP,RUCBP, CENCOS
            HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
            ORDER  BY VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID,  FACT_ACCT_ID, DESCRIPTION, ISDEBIT
      ]]></Sql>
    
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) >= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) <= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="pgLimit" type="argument" optional="true" after=",  FACT_ACCT_ID, DESCRIPTION, ISDEBIT"><![CDATA[ LIMIT ]]></Parameter>
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
  </SqlMethod>
  
  
  
  
  <SqlMethod name="select2balanceanterior" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
                SELECT id,value,name, case when sum(amtacctdr)-sum(amtacctcr)>0 then sum(amtacctdr)-sum(amtacctcr) else 0 end balancedr
        , case when sum(amtacctcr)-sum(amtacctdr)>0 then sum(amtacctcr)-sum(amtacctdr) else 0 end balancecr
        FROM ( SELECT '0' AS RN1, C.* FROM (
          SELECT VALUE, NAME, DATEACCT,
              COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR, COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL,
              MAX(FACT_ACCT_ID) AS FACT_ACCT_ID,
              FACT_ACCT_GROUP_ID, ID, groupbyid, groupbyname,
              DESCRIPTION,nreg , ISDEBIT,
              0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB,
              0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL,
              0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL,
              TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER,
              ? AS groupby, '' as bpid, '' as bpname, '' as pdid, '' as pdname, '' as pjid, '' as pjname, factaccttype
              , 0 AS AMTACCTDRPREVSUM, 0 AS AMTACCTCRPREVSUM,
              '' AS CENCOS, '' AS CURRENCYCODE, '' AS PHYSICALDOCUMENT, '' AS TDCOMP, '' AS FECEMI, '' AS FECVENC, '' AS TDBP, '' AS RUCBP
          FROM
            (SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME,
                DATEACCT, AMTACCTDR, AMTACCTCR, FACT_ACCT_ID,
                FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,FACT_ACCT.em_sco_regnumber nreg ,
                CASE ?
                  WHEN 'BPartner' THEN c_bpartner.c_bpartner_id
                  WHEN 'Product' THEN m_product.m_product_id
                  WHEN 'Costcenter' THEN c_costcenter.c_costcenter_id
                  WHEN 'Project' THEN c_project.c_project_id
                  ELSE '' END AS groupbyid,
                CASE ?
                  WHEN 'BPartner' THEN (select to_char(name) from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id)
                  WHEN 'Product' THEN (select to_char(value || ' - ' || name) from m_product p where p.m_product_id = m_product.m_product_id)
                  WHEN 'Costcenter' THEN c_costcenter.name
                  WHEN 'Project' THEN (select to_char(value || ' - ' || name) from c_project pj where pj.c_project_id = c_project.c_project_id)
                  ELSE '' END AS groupbyname,
                CASE WHEN AMTACCTDR <> 0 THEN 'Y' ELSE 'N' END AS ISDEBIT, 
                CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'D' THEN 4 ELSE 5 END) END) END) END AS FACTACCTTYPE
            FROM FACT_ACCT
              LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
              LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
              LEFT JOIN C_COSTCENTER ON FACT_ACCT.C_COSTCENTER_ID = C_COSTCENTER.C_COSTCENTER_ID
              LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
            WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                      SELECT c_elementvalue_id as name
                      FROM C_ELEMENTVALUE
                      WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and c_elementvalue.ELEMENTLEVEL = 'S'
                    ))
              AND FACT_ACCT.FACTACCTTYPE NOT IN ('C')
              AND FACT_ACCT.AD_ORG_ID IN ('1')
              AND FACT_ACCT.AD_CLIENT_ID IN ('1')
              AND 4=4 
              AND 1=1 AND (FACT_ACCT.FACTACCTTYPE='O' OR (1=1))
              AND  FACT_ACCT.AD_ORG_ID IN ('2')
              AND 2=2
              AND 3=3) D
            WHERE 6=6
            GROUP BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, DESCRIPTION, nreg , ISDEBIT
            HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
            ORDER  BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID,  FACT_ACCT_ID, DESCRIPTION, ISDEBIT
          ) C
        ) B WHERE 1=1
        group by id,value,name
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
    <Parameter name="groupbytext"/>
    <Parameter name="groupby"/>
    <Parameter name="groupby"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 4=4"><![CDATA[ AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[ AND trunc(FACT_ACCT.DATEACCT) >= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="OR (1=1"><![CDATA[ AND trunc(FACT_ACCT.DATEACCT) < trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="accountId" optional="true" after="WHERE 6=6"><![CDATA[AND ID = ? ]]></Parameter>
    <Parameter name="cBPartner" optional="true" after="WHERE 6=6"><![CDATA[AND groupbyid = ? ]]></Parameter>
    <Parameter name="pgLimit" type="argument" optional="true" after=",  FACT_ACCT_ID, DESCRIPTION, ISDEBIT"><![CDATA[ LIMIT ]]></Parameter>
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
  </SqlMethod>
  
  
  
  <SqlMethod name="select2sum" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT Coalesce(SUM(S.amtacctdr), 0) AS AMTACCTDR,
               Coalesce(SUM(S.amtacctcr), 0) AS AMTACCTCR
        FROM (
          SELECT *
          FROM ( SELECT '0' AS RN1, C.* FROM (
            SELECT VALUE, NAME, DATEACCT,
                COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR, COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL,
                MAX(FACT_ACCT_ID) AS FACT_ACCT_ID,
                FACT_ACCT_GROUP_ID, ID, groupbyid, groupbyname,
                DESCRIPTION, ISDEBIT,
                0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB,
                0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL,
                0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL,
                TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER,
                ? AS groupby, '' as bpid, '' as bpname, '' as pdid, '' as pdname, '' as pjid, '' as pjname, factaccttype
                , 0 AS AMTACCTDRPREVSUM, 0 AS AMTACCTCRPREVSUM,
                '' AS CENCOS, '' AS CURRENCYCODE, '' AS PHYSICALDOCUMENT, '' AS TDCOMP, '' AS FECEMI, '' AS FECVENC, '' AS TDBP, '' AS RUCBP
            FROM
              (SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME,
                  DATEACCT, AMTACCTDR, AMTACCTCR, FACT_ACCT_ID,
                  FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,
                  CASE ?
                    WHEN 'BPartner' THEN c_bpartner.c_bpartner_id
                    WHEN 'Product' THEN m_product.m_product_id
                    WHEN 'Project' THEN c_project.c_project_id
                    ELSE '' END AS groupbyid,
                  CASE ?
                    WHEN 'BPartner' THEN (select to_char(name) from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id)
                    WHEN 'Product' THEN (select to_char(value || ' - ' || name) from m_product p where p.m_product_id = m_product.m_product_id)
                    WHEN 'Project' THEN (select to_char(name) from c_project pj where pj.c_project_id = c_project.c_project_id)
                    ELSE '' END AS groupbyname,
                  CASE WHEN AMTACCTDR <> 0 THEN 'Y' ELSE 'N' END AS ISDEBIT, 
          CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'D' THEN 4 ELSE 5 END) END) END) END AS FACTACCTTYPE
              FROM FACT_ACCT
                LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
                LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
                LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
              WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                        SELECT c_elementvalue_id as name
                        FROM C_ELEMENTVALUE
                        WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                          and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                          and c_elementvalue.ELEMENTLEVEL = 'S'
                      ))
                AND FACT_ACCT.AD_ORG_ID IN ('1')
                AND FACT_ACCT.AD_CLIENT_ID IN ('1')
                AND 1=1
                AND  FACT_ACCT.AD_ORG_ID IN ('2')
                AND 2=2
                AND 3=3) D
              WHERE 6=6
              GROUP BY groupbyname, groupbyid, VALUE, NAME, ID,
              DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, DESCRIPTION, ISDEBIT
              HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
              ORDER  BY groupbyname, groupbyid, VALUE, NAME, ID,
              DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID,  FACT_ACCT_ID, DESCRIPTION, ISDEBIT
            ) C
          ) B WHERE 1=1) S
        WHERE S.id = ?
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
    <Parameter name="groupbytext"/>
    <Parameter name="groupby"/>
    <Parameter name="groupby"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) >= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) <= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="accountId" optional="true" after="WHERE 6=6"><![CDATA[AND ID = ? ]]></Parameter>
    <Parameter name="cBPartner" optional="true" after="WHERE 6=6"><![CDATA[AND groupbyid = ? ]]></Parameter>
    <Parameter name="pgLimit" type="argument" optional="true" after=",  FACT_ACCT_ID, DESCRIPTION, ISDEBIT"><![CDATA[ LIMIT ]]></Parameter>
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
    <Parameter name="accountId2"/>
  </SqlMethod>

  <SqlMethod name="select2Total" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR
        FROM ( SELECT '0' AS RN1, C.* FROM (
          SELECT VALUE, NAME, DATEACCT,
          COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR,
              COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL,
              MAX(FACT_ACCT_ID) AS FACT_ACCT_ID,
              FACT_ACCT_GROUP_ID, ID, groupbyid, groupbyname,
              DESCRIPTION, ISDEBIT,
              0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB,
              0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL,
              0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL,
              TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER,
              ? AS groupby, '' as bpid, '' as bpname, '' as pdid, '' as pdname, '' as pjid, '' as pjname, factaccttype
          FROM
            (SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME,
                DATEACCT, AMTACCTDR, AMTACCTCR, FACT_ACCT_ID,
                FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,
                CASE ?
                  WHEN 'BPartner' THEN c_bpartner.c_bpartner_id
                  WHEN 'Product' THEN m_product.m_product_id
                  WHEN 'Project' THEN c_project.c_project_id
                  ELSE '' END AS groupbyid,
                CASE ?
                  WHEN 'BPartner' THEN (select to_char(name) from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id)
                  WHEN 'Product' THEN (select to_char(value || ' - ' || name) from m_product p where p.m_product_id = m_product.m_product_id)
                  WHEN 'Project' THEN (select to_char(value || ' - ' || name) from c_project pj where pj.c_project_id = c_project.c_project_id)
                  ELSE '' END AS groupbyname,
                CASE WHEN AMTACCTDR <> 0 THEN 'Y' ELSE 'N' END AS ISDEBIT, 
        CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'D' THEN 4 ELSE 5 END) END) END) END AS FACTACCTTYPE
            FROM FACT_ACCT
              LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
              LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
              LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
            WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                      SELECT c_elementvalue_id as name
                      FROM C_ELEMENTVALUE
                      WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and c_elementvalue.ELEMENTLEVEL = 'S'
                    ))
              AND FACT_ACCT.AD_ORG_ID IN ('1')
              AND FACT_ACCT.AD_CLIENT_ID IN ('1')
              AND 1=1
              AND  FACT_ACCT.AD_ORG_ID IN ('2')
              AND 2=2
              AND 3=3) D
            WHERE 6=6
            GROUP BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, DESCRIPTION, ISDEBIT
            HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
            ORDER  BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID,  FACT_ACCT_ID, DESCRIPTION, ISDEBIT
          ) C
        ) B WHERE 1=1
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
    <Parameter name="groupbytext"/>
    <Parameter name="groupby"/>
    <Parameter name="groupby"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) >= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) < trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="accountId" optional="true" after="WHERE 6=6"><![CDATA[AND ID = ? ]]></Parameter>
    <Parameter name="cBPartner" optional="true" after="WHERE 6=6"><![CDATA[AND groupbyid = ? ]]></Parameter>
    <Parameter name="pgLimit" type="argument" optional="true" after=",  FACT_ACCT_ID, DESCRIPTION, ISDEBIT"><![CDATA[ LIMIT ]]></Parameter>
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
  </SqlMethod>

  <SqlMethod name="selectXLS" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT VALUE, NAME, DATEACCT,
          SUM(AMTACCTDR) AS AMTACCTDR, SUM(AMTACCTCR) AS AMTACCTCR,
          FACT_ACCT_GROUP_ID, ID, bpid, bpname, pdid, pdname, pjid, pjname,
          DESCRIPTION, FACTACCTTYPE
      FROM
        (SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME,
            DATEACCT, AMTACCTDR, AMTACCTCR,
            FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,
            c_bpartner.c_bpartner_id as bpid, m_product.m_product_id as pdid, c_project.c_project_id as pjid,
            (case AD_COLUMN_IDENTIFIER('C_Bpartner',c_bpartner.c_bpartner_id, ?) when '**' then '' else AD_COLUMN_IDENTIFIER('C_Bpartner',c_bpartner.c_bpartner_id, ?) end) as bpname, (case AD_COLUMN_IDENTIFIER('M_Product',m_product.m_product_id, ?) when '**' then '' else AD_COLUMN_IDENTIFIER('M_Product',m_product.m_product_id, ?) end) as pdname, (case AD_COLUMN_IDENTIFIER('C_Project',c_project.c_project_id, ?) when '**' then '' else AD_COLUMN_IDENTIFIER('C_Project',c_project.c_project_id, ?) end)  as pjname,
            CASE WHEN AMTACCTDR <> 0 THEN 'Y' ELSE 'N' END AS ISDEBIT,
            CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'D' THEN 4 ELSE 5 END) END) END) END AS FACTACCTTYPE
        FROM FACT_ACCT
          LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
          LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
          LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
          LEFT JOIN(
              select account_id, record_id2, sum(amtacctdr-amtacctcr) as sum
              from fact_acct f1
              where 5=5
              group by account_id, record_id2
            ) f2 ON fact_acct.account_id = f2.account_id and fact_acct.record_id2 = f2.record_id2
        WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                  SELECT c_elementvalue_id as name
                  FROM C_ELEMENTVALUE
                  WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                    and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                    and c_elementvalue.ELEMENTLEVEL = 'S'
                ))
          AND FACT_ACCT.AD_ORG_ID IN ('1')
          AND FACT_ACCT.AD_CLIENT_ID IN ('1')
          AND (? = 'N' OR (fact_acct.RECORD_ID2 IS NULL) OR (SUM != 0))
          AND 1=1
          AND  FACT_ACCT.AD_ORG_ID IN ('2')
          AND 2=2
          AND 3=3) D
        WHERE 6=6
        GROUP BY VALUE, NAME, ID, FACTACCTTYPE, DATEACCT, FACT_ACCT_GROUP_ID, description, bpname, bpid, pdname, pdid, pjname, pjid, ISDEBIT
        HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
        ORDER BY VALUE, NAME, ID, DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, description,  bpname, bpid, pdname, pdid, pjname, pjid, ISDEBIT
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="adLanguage"/>
    <Parameter name="adLanguage"/>
    <Parameter name="adLanguage"/>
    <Parameter name="adLanguage"/>
    <Parameter name="adLanguage"/>
    <Parameter name="adLanguage"/>
    <Parameter name="parDateFrom" optional="true" after="where 5=5"><![CDATA[AND DATEACCT >= TO_DATE(?) ]]></Parameter>
    <Parameter name="parDateTo" optional="true" after="where 5=5"><![CDATA[AND DATEACCT < TO_DATE(?) ]]></Parameter>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="hideMatched"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) >= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) <= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
  </SqlMethod>

  <SqlMethod name="selectXLS2" type="preparedStatement" return="scrollable">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT VALUE, NAME, DATEACCT,
          COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR,
          FACT_ACCT_GROUP_ID, ID, bpid, bpname, pdid, pdname, pjid, pjname,
          DESCRIPTION, FACTACCTTYPE
      FROM
        (SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME,
            DATEACCT, AMTACCTDR, AMTACCTCR,
            FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,
            c_bpartner.c_bpartner_id as bpid, m_product.m_product_id as pdid, c_project.c_project_id as pjid,
            (select name from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id) as bpname, 
            (select value || ' - ' || name from m_product p where p.m_product_id = m_product.m_product_id) as pdname, 
            (select value || ' - ' || name from c_project pj where pj.c_project_id = c_project.c_project_id)  as pjname,
            CASE WHEN AMTACCTDR <> 0 THEN 'Y' ELSE 'N' END AS ISDEBIT,
            CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'D' THEN 4 ELSE 5 END) END) END) END AS FACTACCTTYPE
        FROM FACT_ACCT
          LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
          LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
          LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
        WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                  SELECT c_elementvalue_id as name
                  FROM C_ELEMENTVALUE
                  WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                    and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                    and c_elementvalue.ELEMENTLEVEL = 'S'
                ))
          AND FACT_ACCT.AD_ORG_ID IN ('1')
          AND FACT_ACCT.AD_CLIENT_ID IN ('1')
          AND 1=1
          AND  FACT_ACCT.AD_ORG_ID IN ('2')
          AND 2=2
          AND 3=3) D
        WHERE 6=6
        GROUP BY VALUE, NAME, ID, FACTACCTTYPE, DATEACCT, FACT_ACCT_GROUP_ID, description, bpname, bpid, pdname, pdid, pjname, pjid, ISDEBIT
        HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
        ORDER BY VALUE, NAME, ID, DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, description,  bpname, bpid, pdname, pdid, pjname, pjid, ISDEBIT
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) >= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND trunc(FACT_ACCT.DATEACCT) <= trunc(TO_DATE(?)) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
  </SqlMethod>
  
  
  
  <SqlMethod name="select_arbol_de_cuentas" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      
      select value,name from c_elementvalue 
        where 2=2 
          AND AD_ORG_ID IN ('1')
          AND AD_CLIENT_ID IN ('1')
        order by value
      ]]></Sql>
    <Field name="rownum" value="count"/>

    <Parameter name="adUserOrg" type="replace" optional="true" after="AND AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND AD_CLIENT_ID IN (" text="'1'"/>
    
   </SqlMethod>
  
  


  <SqlMethod name="select_periodos" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      
   SELECT c_period_id as idperiodo,name as periodo,to_char(startdate,'dd-MM-yyyy') as fechainicial ,to_char(enddate,'dd-MM-yyyy') as fechafinal
   
   ,ad_org_id as idorganizacion  FROM c_period 

    /*where periodtype!='A'*/
     ORDER BY startdate desc

      
    ]]></Sql>
    <Field name="rownum" value="count"/>
     </SqlMethod>


 <SqlMethod name="select_libros" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      


        SELECT C_ACCTSCHEMA_ID as idlibro, ((CASE C_ACCTSCHEMA.isActive WHEN 'N' THEN '**' ELSE '' END) || C_ACCTSCHEMA.Name) as nombrelibro,ad_org_id as idorganizacion
         FROM C_ACCTSCHEMA

      
    ]]></Sql>
    <Field name="rownum" value="count"/>
     </SqlMethod>










  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
  </SqlMethod>
  
  
  
  
  
  <SqlMethod name="selectCompany" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT NAME
        FROM AD_CLIENT
        WHERE AD_CLIENT_ID = ?
      ]]></Sql>
    <Parameter name="client"/>
  </SqlMethod>

  <SqlMethod name="selectOrganization" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT NAME
        FROM AD_ORG
        WHERE AD_ORG_ID = ?
      ]]></Sql>
    <Parameter name="org"/>
  </SqlMethod>
  
   <SqlMethod name="selectRUC" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT TAXID
        FROM AD_ORGINFO
        WHERE AD_ORG_ID = ?
      ]]></Sql>
    <Parameter name="org"/>
  </SqlMethod>

  <SqlMethod name="selectTotal" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
      SELECT COALESCE(SUM(AMTACCTDR),0) AS TOTALACCTDR, COALESCE(SUM(AMTACCTCR),0) AS TOTALACCTCR,
      COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL
      FROM FACT_ACCT
      LEFT JOIN(
        select account_id, record_id2, sum(amtacctdr-amtacctcr) as sum
        from fact_acct f1
        where 5=5
        group by account_id, record_id2
      ) f2 ON fact_acct.account_id = f2.account_id and fact_acct.record_id2 = f2.record_id2
      WHERE 1=1
      AND FACT_ACCT.ACCOUNT_ID = ?
      AND DATEACCT >= TO_DATE(?)
      AND DATEACCT < TO_DATE(?)
      AND FACT_ACCT.AD_ORG_ID IN ('1')
      AND (? = 'N' OR ((fact_acct.RECORD_ID2 IS NULL) OR (DATEACCT < TO_DATE(?)) OR (SUM != 0)))
      ]]></Sql>
      <Parameter name="dateFrom" optional="true" after="where 5=5"><![CDATA[AND DATEACCT >= TO_DATE(?) ]]></Parameter>
      <Parameter name="dateTo" optional="true" after="where 5=5"><![CDATA[AND DATEACCT < TO_DATE(?) ]]></Parameter>
      <Parameter name="bpartner" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
      <Parameter name="bpartnerNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IS NULL]]></Parameter>
      <Parameter name="product" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
      <Parameter name="productNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IS NULL]]></Parameter>
      <Parameter name="project" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
      <Parameter name="projectNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IS NULL]]></Parameter>
      <Parameter name="acctschema" optional="true" after="1=1"><![CDATA[ AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
      <Parameter name="account"/>
      <Parameter name="initialYearBalance"/>
      <Parameter name="dateTo2"/>
      <Parameter name="orgs" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
      <Parameter name="hideMatched"/>
      <Parameter name="dateFrom"/>
   </SqlMethod>

  <SqlMethod name="selectTotal2" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
      SELECT COALESCE(SUM(AMTACCTDR),0) AS TOTALACCTDR, COALESCE(SUM(AMTACCTCR),0) AS TOTALACCTCR,
      COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL
      FROM FACT_ACCT
      WHERE 1=1
      AND FACT_ACCT.ACCOUNT_ID = ?
      AND DATEACCT < TO_DATE(?)
      AND FACT_ACCT.AD_ORG_ID IN ('1')
      ]]></Sql>
      <Parameter name="bpartner" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
      <Parameter name="bpartnerNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IS NULL]]></Parameter>
      <Parameter name="product" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
      <Parameter name="productNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IS NULL]]></Parameter>
      <Parameter name="project" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
      <Parameter name="projectNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IS NULL]]></Parameter>
      <Parameter name="acctschema" optional="true" after="1=1"><![CDATA[ AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
      <Parameter name="account"/>
      <Parameter name="dateFrom" optional="true" after="ACCOUNT_ID = ?"><![CDATA[ AND DATEACCT >= TO_DATE(?) ]]></Parameter>
      <Parameter name="dateTo2"/>
      <Parameter name="orgs" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
   </SqlMethod>
   
  <SqlMethod name="yearInitialDate" type="preparedStatement" return="string">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
      SELECT TO_CHAR(MAX(INI),?) AS STARTDATE
      FROM
        (
        SELECT MIN(P.STARTDATE) AS INI
        FROM C_YEAR Y, C_PERIOD P, C_PERIODCONTROL PC
        WHERE Y.C_YEAR_ID = P.C_YEAR_ID
          AND P.C_PERIOD_ID = PC.C_PERIOD_ID
          AND P.STARTDATE <= TO_DATE(?)
          AND PC.AD_CLIENT_ID IN ('1')
          AND PC.AD_ORG_ID IN ('1')
        GROUP BY Y.YEAR
        ) PERIOD
      ]]></Sql>
      <Parameter name="dateTemplate"/>
      <Parameter name="date"/>
      <Parameter name="client" type="replace" optional="true" after="AND PC.AD_CLIENT_ID IN (" text="'1'"/>
      <Parameter name="orgs" type="replace" optional="true" after="AND PC.AD_ORG_ID IN (" text="'1'"/>
   </SqlMethod>

  <SqlMethod name="selectSubaccountDescription" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      SELECT VALUE || ' - ' || COALESCE(TO_CHAR(NAME),TO_CHAR('')) AS NAME
      FROM C_ELEMENTVALUE
      WHERE C_ELEMENTVALUE_ID = ?
    ]]></Sql>
    <Parameter name="elementValueId"/>
  </SqlMethod>
  <SqlMethod name="getFinancialOrgs" type="preparedStatement" return="multiple">
     <SqlMethodComment></SqlMethodComment>
     <Sql><![CDATA[
        SELECT NODE_ID AS ID
    FROM AD_TREENODE
    WHERE AD_TREE_ID = ?
    AND (AD_ISORGINCLUDED(?, NODE_ID, ?) <> -1
      OR AD_ISORGINCLUDED(NODE_ID, ?, ?) <> -1)
     ]]></Sql>
     <Parameter name="adTreeId"/>
     <Parameter name="adOrgId"/>
     <Parameter name="adClientId"/>
     <Parameter name="adOrgId"/>
     <Parameter name="adClientId"/>
  </SqlMethod>
  
   <SqlMethod name="selectSocialName" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT social_name
        FROM AD_ORG
        WHERE AD_ORG_ID = ?
      ]]></Sql>
    <Parameter name="organization"/>
  </SqlMethod>

</SqlClass>
