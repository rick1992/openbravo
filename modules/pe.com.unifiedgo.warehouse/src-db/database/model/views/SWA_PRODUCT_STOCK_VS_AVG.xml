<?xml version="1.0"?>
  <database name="VIEW SWA_PRODUCT_STOCK_VS_AVG">
    <view name="SWA_PRODUCT_STOCK_VS_AVG"><![CDATA[SELECT DISTINCT COALESCE(a.m_product_id, '-') || a.ad_org_id AS swa_product_stock_vs_avg_id, a.ad_client_id, a.ad_org_id, a.isactive, a.updated, a.updatedby, a.created, a.createdby, a.m_product_id, a.value, a.name, a.qtyonhand, CASE WHEN abs(sum(cp.movementqty)) = 0 THEN 0 ELSE round(abs(sum(cp.movementqty)) / 12, 2) END AS qtyavg FROM (SELECT p.ad_client_id, p.ad_org_id, p.isactive, p.updated, p.updatedby, p.created, p.createdby, p.m_product_id, p.value, p.name, sum(pw.qtyonhand) AS qtyonhand FROM m_product p LEFT JOIN swa_product_warehouse_v pw ON p.m_product_id = pw.m_product_id WHERE p.isstocked = 'Y' AND p.isactive = 'Y' GROUP BY p.ad_org_id, p.ad_client_id, p.isactive, p.updated, p.updatedby, p.created, p.createdby, p.m_product_id, p.value, p.name) a LEFT JOIN sre_consumptransaction_v cp ON a.m_product_id = cp.m_product_id WHERE ad_isorgincluded(cp.ad_org_id, a.ad_org_id, a.ad_client_id) > (-1) AND cp.movementdate >= (TRUNC(now(), 'MM') - 365) AND cp.movementdate <= TRUNC(now(), 'MM') GROUP BY a.ad_org_id, a.ad_client_id, a.isactive, a.updated, a.updatedby, a.created, a.createdby, a.m_product_id, a.value, a.name, a.qtyonhand HAVING abs(sum(cp.movementqty)) > 0 AND a.qtyonhand < (abs(sum(cp.movementqty)) / 12) ORDER BY CASE WHEN abs(sum(cp.movementqty)) = 0 THEN 0 ELSE round(abs(sum(cp.movementqty)) / 12, 2) END DESC]]></view>
  </database>
