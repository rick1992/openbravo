<?xml version="1.0"?>
  <database name="FUNCTION SCO_PLE8_14_REG_POST">
    <function name="SCO_PLE8_14_REG_POST" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_order_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistics
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_User VARCHAR2(32);
  v_IsProcessing CHAR(1) ;
  v_IsProcessed VARCHAR(60) ;
  v_Result NUMBER:=1; -- Success
  v_is_included NUMBER:=0;
  v_is_ready AD_Org.IsReady%TYPE;
  v_is_tr_allow AD_OrgType.IsTransactionsAllowed%TYPE;
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_line RECORD;
  -- Record Info
  v_Client_ID VARCHAR2(32);
  v_Org_ID VARCHAR2(32);
  v_UpdatedBy VARCHAR2(32);
  v_DocAction VARCHAR(60) ;
  v_DocStatus VARCHAR(60) ;
 
  v_Aux NUMBER;
  v_c_Bpartner_ID VARCHAR2(32);
  v_Count NUMBER;
  FINISH_PROCESS BOOLEAN:=FALSE;
  END_PROCESSING BOOLEAN:=FALSE;


  v_DocNo_Org_ID AD_Sequence.AD_Org_ID%TYPE;
  v_TargetDocBaseType C_DOCTYPE.DocBaseType%TYPE;


  BEGIN
    IF (p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
      v_ResultStr:='PInstanceNotFound';
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
      -- Get Parameters
      v_ResultStr:='ReadingParameters';
      FOR Cur_Parameter IN
        (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String,
          p.P_Number, p.P_Date
        FROM AD_PINSTANCE i
        LEFT JOIN AD_PINSTANCE_PARA p
          ON i.AD_PInstance_ID=p.AD_PInstance_ID
        WHERE i.AD_PInstance_ID=p_PInstance_ID
        ORDER BY p.SeqNo
        )
      LOOP
        v_Record_ID:=Cur_Parameter.Record_ID;
        v_User:=Cur_Parameter.AD_User_ID;
      END LOOP; -- Get Parameter
    ELSE
      v_Record_ID:=p_Order_ID;
      SELECT CREATEDBY INTO v_User  FROM SCO_PLE8_14_REG  WHERE SCO_PLE8_14_REG_ID=p_Order_ID;
    END IF;
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
  BEGIN --BODY

    /**
    * Read PLE8_14 REG
    */
    v_ResultStr:='ReadingOrder';
    SELECT Processing, Processed, DocAction, DocStatus,
      SCO_PLE8_14_REG.AD_Client_ID, SCO_PLE8_14_REG.AD_Org_ID, SCO_PLE8_14_REG.UpdatedBy
    INTO v_IsProcessing, v_IsProcessed, v_DocAction, v_DocStatus,
      v_Client_ID, v_Org_ID, v_UpdatedBy
    FROM SCO_PLE8_14_REG
    WHERE SCO_PLE8_14_REG_ID=v_Record_ID  FOR UPDATE;

    IF(v_DocStatus IN('CL', 'VO', 'RE')) THEN
      RAISE_APPLICATION_ERROR(-20000, '@AlreadyPosted@') ;
    END IF;

    /**
    * Unlock
    */
    IF(v_DocAction='XL') THEN
      UPDATE SCO_PLE8_14_REG
        SET Processing='N',
        DocAction='--',
        Updated=now(),
        UpdatedBy=v_User
      WHERE SCO_PLE8_14_REG_ID=v_Record_ID;
      FINISH_PROCESS:=TRUE;
    END IF;
    
    IF (NOT FINISH_PROCESS) THEN

      
      /**
       * Everything done
       */
      IF (v_IsProcessed='Y' AND v_DocAction NOT IN('RC', 'RE','CL')) THEN
        RAISE_APPLICATION_ERROR(-20000, '@AlreadyPosted@');
      END IF;
    END IF;--FINISH_PROCESS

    IF(NOT FINISH_PROCESS) THEN
      IF(v_IsProcessing='Y') THEN
        RAISE_APPLICATION_ERROR(-20000, '@OtherProcessActive@') ;
      END IF;
    END IF;


    IF(NOT FINISH_PROCESS) THEN
      IF(v_IsProcessing='Y') THEN
        RAISE_APPLICATION_ERROR(-20000, '@OtherProcessActive@') ;
      END IF;

      /**
      * Re-activate
      */
      
      IF (v_DocAction='RE') THEN
       

        DBMS_OUTPUT.PUT_LINE('Re-Activating ' ||  v_Record_ID) ;
        
        -- Update Order
        v_ResultStr:='ReActivate';

	UPDATE SCO_PLE8_14_REG
        SET DocStatus='DR', -- Draft
            DocAction='CO',
            Processing='N',
	    Processed='N',
            Updated=now(),
            UpdatedBy=v_User
        WHERE SCO_PLE8_14_REG_ID=v_Record_ID;
       
        FINISH_PROCESS:=TRUE;
      END IF;
      

    END IF;--FINISH_PROCESS

    IF (NOT FINISH_PROCESS) THEN
    
      IF (p_PInstance_ID IS NOT NULL) THEN
        v_ResultStr:='LockingOrder';
        UPDATE SCO_PLE8_14_REG  SET Processing='Y'  WHERE SCO_PLE8_14_REG_ID=v_Record_ID;
        COMMIT;
        -- Now, needs to go to END_PROCESSING to unlock
      END IF;


      /**
      * Allowed Actions:  COmplete, CLose
      */
      IF (v_DocAction IN('CO', 'CL', 'PR')) THEN
        NULL;
      ELSE
        RAISE_APPLICATION_ERROR(-20000, '@ActionNotAllowedHere@') ;
      END IF;


  
      -- Synchronize Client/Org Ownership
      UPDATE SCO_PLE8_14_REG
      SET AD_Client_ID=v_Client_ID
      WHERE SCO_PLE8_14_REG_ID=v_Record_ID
        AND (AD_Client_ID<>v_Client_ID) ;
      

    END IF;--FINISH_PROCESS

    IF (NOT FINISH_PROCESS AND NOT END_PROCESSING) THEN
     /**
      * In Progress -----------------------------------------------------------
      */
      UPDATE SCO_PLE8_14_REG
      SET DocStatus='IP',
          Updated=now(),
          UpdatedBy=v_User
      WHERE SCO_PLE8_14_REG_ID=v_Record_ID;
      IF (p_PInstance_ID IS NOT NULL) THEN
        COMMIT;
      END IF;

    /**
      * Finished with processing
      */
      IF (v_DocAction='PR') THEN
        v_ResultStr:='FinishProcessing';
        UPDATE SCO_PLE8_14_REG
        SET DocStatus='IP',
            DocAction='CO',
            Processed='N',
            Updated=now(),
            UpdatedBy=v_User
        WHERE SCO_PLE8_14_REG_ID=v_Record_ID;
        END_PROCESSING:=TRUE;
      END IF;
    END IF;--FINISH_PROCESS

  
    IF (NOT FINISH_PROCESS AND NOT END_PROCESSING) THEN

      IF (v_DocAction IN('CO', 'CL')) THEN
        UPDATE SCO_PLE8_14_REG
        SET DocStatus='CO',
            DocAction='RE',
            Processed='Y',
            Updated=now(),
            UpdatedBy=v_User
        WHERE SCO_PLE8_14_REG_ID=v_Record_ID;

      END IF;

      IF (v_DocAction NOT IN('CO')) THEN
        END_PROCESSING:=TRUE;
      END IF;
    END IF;--FINISH_PROCESS

    IF (NOT FINISH_PROCESS) THEN


      IF (v_DocAction='CL') THEN
        UPDATE SCO_PLE8_14_REG
        SET DocStatus='CL',
            DocAction='--',
            Processed='Y'
        WHERE SCO_PLE8_14_REG_ID=v_Record_ID;
      END IF;
    END IF;--FINISH_PROCESS

    IF (NOT FINISH_PROCESS) THEN
      IF (p_PInstance_ID IS NOT NULL) THEN
        v_ResultStr:='UnLockingOrder';
        UPDATE SCO_PLE8_14_REG
        SET Processing='N',
            Updated=now(),
            UpdatedBy=v_User
        WHERE SCO_PLE8_14_REG_ID=v_Record_ID;
        COMMIT;
      END IF;
    END IF;--FINISH_PROCESS

    --<<FINISH_PROCESS>>
    IF (p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
    END IF;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  v_ResultStr:= '@ERROR=' || SQLERRM;
  IF(p_PInstance_ID IS NOT NULL) THEN
    ROLLBACK;
    --Inserted by Carlos Romero 062706
    UPDATE SCO_PLE8_14_REG  SET Processing='N'  WHERE SCO_PLE8_14_REG_ID=v_Record_ID;
    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  ELSE
    RAISE;
  END IF;
  RETURN;
END SCO_PLE8_14_REG_POST
]]></body>
    </function>
  </database>
