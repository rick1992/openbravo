<?xml version="1.0"?>
  <database name="FUNCTION SWA_SHIPMENT_TO_DISPATCH">
    <function name="SWA_SHIPMENT_TO_DISPATCH" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistics
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- Success
  v_Record_ID VARCHAR2(32);
  v_User VARCHAR2(32);
  v_Client_ID VARCHAR(32); 
  v_Org_ID VARCHAR(32);
  v_docStatus VARCHAR(60);
  v_swa_shipstatus VARCHAR(60);

  v_pickliststatus VARCHAR(60);
  v_em_swa_zone_status VARCHAR(60);
  v_em_swa_user_embalador VARCHAR(32);

  v_peso NUMBER:=0;
  v_volumen NUMBER:=0;
  v_bultos NUMBER:=0;
 
--Parameter
  Cur_Parameter RECORD;
  p_shipmentaction VARCHAR(60); 
  v_Count NUMBER;

BEGIN
    
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;

    IF (p_PInstance_ID IS NULL) THEN
      RAISE_APPLICATION_ERROR(-20000, '@SWA_ErrorInProcessCall@') ;
    END IF;

    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,i.AD_User_ID, i.AD_Client_ID, p.ParameterName, p.P_String, p.P_Date , p.p_number
       FROM AD_PInstance i
         LEFT JOIN AD_PInstance_Para p ON i.AD_PInstance_ID=p.AD_PInstance_ID
       WHERE i.AD_PInstance_ID=p_PInstance_ID
       ORDER BY p.SeqNo) 
    LOOP
         IF (Cur_Parameter.ParameterName = 'swa_shipment_to_dispatch') THEN
             v_em_swa_user_embalador := Cur_Parameter.P_String;
	     DBMS_OUTPUT.PUT_LINE('  p_shipmentaction=' || p_shipmentaction) ;

         ELSIF (Cur_Parameter.ParameterName = 'swa_picking_volumen') THEN
             v_volumen := Cur_Parameter.p_number;
	    -- RAISE NOTICE '%','  p_shipmentaction=' || p_shipmentaction ;

	 ELSIF (Cur_Parameter.ParameterName = 'swa_picking_bultos') THEN
             v_bultos := Cur_Parameter.p_number;
	     --RAISE NOTICE '%','  p_shipmentaction=' || p_shipmentaction ;

	 ELSIF (Cur_Parameter.ParameterName = 'swa_picking_peso') THEN
             v_peso := Cur_Parameter.p_number;
	     --RAISE NOTICE '%','  p_shipmentaction=' || p_shipmentaction ;
         ELSE
             DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
         END IF;
	v_Record_ID:=Cur_Parameter.Record_ID;
        v_User:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

    v_volumen:=COALESCE(v_volumen,0);
    v_bultos:=COALESCE(v_bultos,0);
    v_peso:=COALESCE(v_peso,0);

   
    
    SELECT pickliststatus , em_swa_zone_status
      INTO v_pickliststatus , v_em_swa_zone_status
      FROM obwpl_pickinglist 
     WHERE obwpl_pickinglist_id=v_Record_ID;


     IF(v_em_swa_user_embalador IS NULL)THEN
      RAISE_APPLICATION_ERROR(-20000, '@SWA_pickinglistWhitoutEmbalador@');
     END IF;


    IF(v_pickliststatus='CO')THEN
        
	FOR CUR_PARAMETER IN (
	  SELECT * FROM M_INOUT IO
	    WHERE M_INOUT_ID IN (SELECT distinct(m_inout_id) FROM M_INOUTLINE IOL WHERE IOL.em_obwpl_pickinglist_id = v_Record_ID)
	)
	LOOP

             IF(CUR_PARAMETER.em_swa_shipstatus='SWA_PACK')THEN
              UPDATE M_INOUT 
                SET em_swa_shipstatus='SWA_DISP',
                    EM_Swa_Todispatchzonedatetime=now()
               WHERE M_INOUT_ID = CUR_PARAMETER.M_INOUT_ID;
             ELSE 
                RAISE_APPLICATION_ERROR(-20000, '@SWA_ErrorUpdateShipStatus@');
             END IF;
	
	END LOOP; 
     
    END IF;

     UPDATE obwpl_pickinglist
       SET em_swa_zone_status='DP',
           em_swa_user_embalador = v_em_swa_user_embalador,
           em_ssa_weight_pk = v_peso,
           em_ssa_volumen_pk = v_volumen ,
           em_ssa_numboxes_pk = v_bultos
      WHERE obwpl_pickinglist_id=v_Record_ID;
  
    

    -- RAISE v_pickliststatus ; 


    v_Message:='@SWA_PickingStatusShipmentStatus@'; --OBTG:-20000--
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;

    EXCEPTION
    WHEN OTHERS THEN
      v_ResultStr:= '@ERROR=' || SQLERRM;
      IF(p_PInstance_ID IS NOT NULL) THEN
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
      END IF;

    RETURN;
END SWA_SHIPMENT_TO_DISPATCH
]]></body>
    </function>
  </database>
