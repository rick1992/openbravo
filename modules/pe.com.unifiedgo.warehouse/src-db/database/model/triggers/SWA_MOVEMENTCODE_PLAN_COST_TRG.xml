<?xml version="1.0"?>
  <database name="TRIGGER SWA_MOVEMENTCODE_PLAN_COST_TRG">
    <trigger name="SWA_MOVEMENTCODE_PLAN_COST_TRG" table="SWA_MOVEMENTCODE_PLAN" fires="before" insert="true" update="true" delete="false" foreach="row">
      <body><![CDATA[

/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2012-2013 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  v_onhand      NUMBER;
  v_reserved    NUMBER;
  v_cost       NUMBER;
  v_productname m_product.name%TYPE;
  v_isgeneric   CHAR(1);
  v_docstatus VARCHAR(60);
  v_processed   CHAR(1);
  v_currency_sol VARCHAR(32):='308';
  
  
  

BEGIN
  IF (AD_isTriggerEnabled() = 'N') THEN RETURN;
  END IF;

  IF (INSERTING) THEN
  
   --GET COST FOR FROM PRODUCT
   SELECT COALESCE(price,0) 
     INTO v_cost 
     FROM M_Costing  
    WHERE M_Product_ID = :NEW.m_product_id 
      AND c_currency_id = v_currency_sol 
      AND datefrom <= now() 
      AND dateto > now() order by dateTo desc limit 1;

   :NEW.cost:=COALESCE(v_cost,0);
   
   --GET COST FOR TO PRODUCT
   SELECT COALESCE(price,0) 
     INTO v_cost 
     FROM M_Costing  
    WHERE M_Product_ID = :NEW.m_to_product_id 
      AND c_currency_id = v_currency_sol 
      AND datefrom <= now() 
      AND dateto > now() order by dateTo desc limit 1;
   
   :NEW.tocost:=COALESCE(v_cost,0);
   
  END IF;
  

  IF (UPDATING) THEN
    --GET COST FOR FROM PRODUCT
    IF(:OLD.m_product_id <> :NEW.m_product_id)THEN
       SELECT COALESCE(price,0) 
         INTO v_cost 
         FROM M_Costing  
        WHERE M_Product_ID = :NEW.m_product_id 
         AND c_currency_id = v_currency_sol 
      AND datefrom <= now() 
      AND dateto > now() order by dateTo desc limit 1;

      
      :NEW.cost:=COALESCE(v_cost,0);
      
    END IF;
    --GET COST FOR TO PRODUCT
    IF(:OLD.m_to_product_id <> :NEW.m_to_product_id)THEN
       SELECT COALESCE(price,0)
         INTO v_cost 
         FROM M_Costing  
        WHERE M_Product_ID = :NEW.m_to_product_id 
         AND c_currency_id = v_currency_sol 
      AND datefrom <= now() 
      AND dateto > now() order by dateTo desc limit 1;
      
       :NEW.tocost:=COALESCE(v_cost,0);
    END IF;
  END IF;

  
END SWA_MOVEMENTCODE_PLAN_COST_TRG
]]></body>
    </trigger>
  </database>
