<?xml version="1.0"?>
  <database name="FUNCTION SPR_BUDGET_POST1">
    <function name="SPR_BUDGET_POST1" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_budget_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistics
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32);
  v_Result NUMBER:=1; -- Success
  v_CountLines NUMBER:=0; -- Success
  v_docstatus VARCHAR2(60);
  v_docaction VARCHAR2(60);
  v_docstatus_new VARCHAR2(60);
  v_docaction_new  VARCHAR2(60);
  v_budgettype VARCHAR2(60);

  v_reqdocumentno VARCHAR2(60);
  v_infoline VARCHAR2(150);
  v_messageError VARCHAR2(250);
  
  Cur_Parameter RECORD;
  Cur_Parameter2 RECORD;
BEGIN


    
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
    -- Get Parameters

    IF (p_PInstance_ID IS NULL AND p_budget_id IS NULL) THEN
      RAISE NO_DATA_FOUND ;
    ELSIF(p_budget_id IS NOT NULL) THEN
      v_Record_ID:=p_budget_id;
      SELECT CreatedBy
        INTO v_User_ID
        FROM spr_budget
       WHERE spr_budget_id=v_Record_ID;
      IF(v_User_ID IS NULL)THEN
       RAISE NO_DATA_FOUND ;
      END IF;
    ELSIF(p_PInstance_ID IS NOT NULL) THEN
      SELECT Record_ID, CreatedBy
      INTO v_Record_ID, v_User_ID
      FROM AD_PInstance
     WHERE AD_PInstance_ID = p_PInstance_ID;
    END IF;

    -- DETERMINAR SI HAY  LINEAS SPR_BUDGETLINE

    SELECT COUNT(spr_budget_id)
    INTO v_CountLines
    FROM spr_budgetline
    WHERE spr_budget_id=v_Record_ID;

    IF(v_CountLines = 0) THEN
        v_Message := '@spr_budget_notlines@';
        v_Result := 0; -- Error
        IF(p_PInstance_ID IS NOT NULL) THEN
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
        END IF;
        RETURN;
    END IF;

    
    --/////////////////////////////////////
    
    SELECT docstatus, docaction, type
      INTO v_docstatus, v_docaction, v_budgettype
    FROM spr_budget
    WHERE spr_budget_id=v_Record_ID FOR UPDATE;
    
    
    IF (v_docstatus LIKE 'DR' AND v_docaction LIKE 'CO') THEN

       IF(v_budgettype = 'BDG')THEN --Tipo Presupuesto

	      v_docstatus_new:='CO';
	      v_docaction_new:='RE';

	      UPDATE spr_budget 
		 SET approved=now(),
		     approvedby=v_User_ID
	       WHERE spr_budget_id=v_Record_ID;
		
       ELSE --tipo Ajuste

              --VALIDACION: NO PUEDEN HABER LINEAS CON PRODUCTOS CON CANTIDADES 0
              SELECT count(*) INTO v_CountLines FROM spr_budgetline WHERE spr_budget_id = v_Record_ID AND qtyrequested <= 0 AND qtyordered<=0;
              IF(v_CountLines > 0)THEN
                RAISE_APPLICATION_ERROR(-20000,'@spr_budgetline_invalidqty@');
              END IF;
              

	       UPDATE spr_budget
		  SET DOCSTATUS='PD',
		      DOCACTION='EV'
		WHERE spr_budget_id = v_Record_ID;

		v_Message := '@spr_budget_needs_approval@'; 
		v_Result := 2; -- Warning
		IF(p_PInstance_ID IS NOT NULL) THEN
	          AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
		END IF;
		RETURN;
       
       END IF;
     

    ELSIF(v_docstatus LIKE 'PD' AND v_docaction LIKE 'AP') THEN

        v_docstatus_new:='CO';
        v_docaction_new:='RE';

        UPDATE spr_budget 
         SET approved=now(),
             approvedby=v_User_ID
        WHERE spr_budget_id=v_Record_ID;

    ELSIF(v_docstatus LIKE 'PD' AND v_docaction LIKE 'DP')THEN

        v_docstatus_new:='DR';
        v_docaction_new:='CO';

    ELSIF(v_docstatus LIKE 'CO' AND v_docaction LIKE 'RE')THEN

	v_docstatus_new:='DR';
        v_docaction_new:='CO';

        --Antes de Reactivar hay que revisar si las lineas de tipo presupuesto o ajuste no estan en a√±gun requerimiento
        --completado o borrador, deberia solo estar en requerimientos cancelados.
        SELECT MR.documentno , (P.NAME || ' - ' || BI.name) INTO
          v_reqdocumentno, v_infoline 
          FROM M_REQUISITIONLINE MRL
          INNER JOIN M_REQUISITION MR ON MR.M_REQUISITION_ID = MRL.M_REQUISITION_ID
          INNER JOIN M_PRODUCT P ON P.M_PRODUCT_ID = MRL.M_PRODUCT_ID
          LEFT JOIN SPR_BUDGETITEM BI ON MRL.EM_SPR_BUDGETITEM_ID = BI.SPR_BUDGETITEM_ID
         WHERE MRL.em_spr_budgetline_id IN (SELECT SPR_BUDGETLINE_ID FROM SPR_BUDGETLINE WHERE SPR_BUDGET_ID = v_Record_ID)
          AND MR.DOCSTATUS <> 'CL' limit 1; --borrador y Completados son suficientes para no reactivar

          IF(v_reqdocumentno IS NOT NULL)THEN
          v_messageError:= '@spr_budgetWithRequisition@' || ' ' || v_reqdocumentno || ' '||' @spr_for_product@ ' || v_infoline;
             RAISE_APPLICATION_ERROR(-20000,v_messageError);
          END IF;
         

    ELSE
    
        v_Message := '@spr_budget_invalidaction@';
        v_Result := 2; -- Warning
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
        RETURN;
        
    END IF; 

    
    
  --UPDATE STATUS
    UPDATE spr_budget 
    SET docstatus=v_docstatus_new,
        docaction=v_docaction_new,
        updatedby=v_User_ID,
        updated= now()
    WHERE spr_budget_id=v_Record_ID;
  ---------------------------------------------

  
    v_Message:='Terminated';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
    IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
    END IF;

    EXCEPTION
    WHEN OTHERS THEN
      v_ResultStr:= '@ERROR=' || SQLERRM;
      IF(p_PInstance_ID IS NOT NULL) THEN
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
      END IF;

    RETURN;
END SPR_BUDGET_POST1
]]></body>
    </function>
  </database>
