<?xml version="1.0"?>
  <database name="FUNCTION SPR_PROJECT_GETEXPENSES_POST1">
    <function name="SPR_PROJECT_GETEXPENSES_POST1" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_requisition_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistics
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32);
  v_Result NUMBER:=1; -- Success
  v_CountLines NUMBER:=0; -- Success
  v_docstatus VARCHAR2(60);
  v_eval_docstatus  VARCHAR2(60);
  v_docaction VARCHAR2(60);
  v_docstatus_new VARCHAR2(60);
  v_docaction_new  VARCHAR2(60);
  v_budgettype VARCHAR2(60);
  
  Cur_Parameter RECORD;
  Cur_Parameter2 RECORD;
BEGIN


    
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
    -- Get Parameters

    IF (p_PInstance_ID IS NULL AND p_requisition_id IS NULL) THEN
      RAISE NO_DATA_FOUND ;
    ELSIF(p_requisition_id IS NOT NULL) THEN
      v_Record_ID:=p_budget_id;
      SELECT CreatedBy, em_sre_val_docaction
        INTO v_User_ID, v_docaction
        FROM m_requisition
       WHERE m_requisition_id=v_Record_ID;
      IF(v_User_ID IS NULL)THEN
       RAISE NO_DATA_FOUND ;
      END IF;
    ELSIF(p_PInstance_ID IS NOT NULL) THEN
      SELECT Record_ID, CreatedBy
      INTO v_Record_ID, v_User_ID
      FROM AD_PInstance
     WHERE AD_PInstance_ID = p_PInstance_ID;

     FOR Cur_Parameter IN
        (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String,
          p.P_Number, p.P_Date
        FROM AD_PINSTANCE i
        LEFT JOIN AD_PINSTANCE_PARA p
          ON i.AD_PInstance_ID=p.AD_PInstance_ID
        WHERE i.AD_PInstance_ID=p_PInstance_ID
        ORDER BY p.SeqNo
        )
      LOOP
        IF (Cur_Parameter.parametername = 'docaction') THEN
            v_docaction:=COALESCE(Cur_Parameter.p_string,'');
        END IF;
      END LOOP; -- Get Parameter
    END IF;

    SELECT docstatus
      INTO v_docstatus
    FROM c_project
    WHERE c_project_id=v_Record_ID FOR UPDATE;


    IF(v_docstatus='DR' AND v_eval_docstatus='PD')THEN

      
      IF(v_docaction='AP')THEN --APROBAR

       UPDATE m_requisition 
          SET em_sre_eval_docstatus='AP'
        WHERE m_requisition_id = v_Record_ID;
        
       M_REQUISITION_POST0(p_PInstance_ID, NULL) ;
       
      ELSIF(v_docaction='DP') THEN --DESAPROBAR

	UPDATE m_requisition 
          SET em_sre_eval_docstatus='DP'
        WHERE m_requisition_id = v_Record_ID;

      ELSE 
        RAISE_APPLICATION_ERROR(-20000,'@sre_requerimiento_invalidaction@');
      END IF;
    ELSE
      RAISE_APPLICATION_ERROR(-20000,'@sre_requerimiento_invalidaction@');
    END IF;
    
  
    v_Message:='Terminated';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
    IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
    END IF;

    EXCEPTION
    WHEN OTHERS THEN
      v_ResultStr:= '@ERROR=' || SQLERRM;
      IF(p_PInstance_ID IS NOT NULL) THEN
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
      END IF;

    RETURN;
END SPR_PROJECT_GETEXPENSES_POST1
]]></body>
    </function>
  </database>
