<?xml version="1.0"?>
  <database name="TRIGGER SWA_INOUT_ORDTYPECHANGE_TRG">
    <trigger name="SWA_INOUT_ORDTYPECHANGE_TRG" table="M_INOUT" fires="after" insert="false" update="true" delete="false" foreach="row">
      <body><![CDATA[  v_combo_item_id VARCHAR(32);
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;

    IF(COALESCE(:OLD.em_swa_combo_item_id,'')<>COALESCE(:NEW.em_swa_combo_item_id,'') AND :NEW.docstatus='CO') THEN
      IF(:NEW.posted='Y' 
      OR :NEW.c_order_id IS NOT NULL 
      OR :NEW.c_invoice_id IS NOT NULL
      OR :NEW.em_scr_c_invoice_id IS NOT NULL
      OR :NEW.em_scr_other_order_id IS NOT NULL
      OR :NEW.em_ssa_serviceorder_id IS NOT NULL
      OR :NEW.em_ssa_other_inout_id IS NOT NULL
      OR :NEW.em_swa_requireposicion_id IS NOT NULL
      OR :NEW.em_swa_asociate_inout_id IS NOT NULL
      OR :NEW.em_swa_repo_order_id IS NOT NULL
      OR :NEW.em_swa_inventory_id IS NOT NULL
      ) THEN
        RAISE_APPLICATION_ERROR(-20000, '@SWA_InoutOrderTypeChangeDocRelated@') ;
      END IF;

      UPDATE m_transaction trx 
      SET em_ssa_combo_item_id=:NEW.em_swa_combo_item_id 
      WHERE trx.m_inoutline_id IN 
        (SELECT iol.m_inoutline_id FROM M_Inoutline iol WHERE iol.M_Inout_ID = :NEW.M_Inout_ID);

    END IF;

    END SWA_INOUT_ORDTYPECHANGE_TRG
]]></body>
    </trigger>
  </database>
