<?xml version="1.0"?>
  <database name="TRIGGER SSA_ORDERLINE_CHK_REST2_TRG">
    <trigger name="SSA_ORDERLINE_CHK_REST2_TRG" table="C_ORDERLINE" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[
  v_Processed VARCHAR(60) ;
  v_Posted VARCHAR(60) ;
  v_C_ORDER_ID VARCHAR2(32) ;
  v_Prec NUMBER:=2;
  v_Currency     VARCHAR2(32);
  v_productname m_product.name%TYPE;
  v_isgeneric   CHAR(1);
  v_Issotrx     CHAR(1);
  v_UOM_ID   varchar2(32);
  v_productgroup_id VARCHAR(32);

  v_tax_id VARCHAR(32);
  v_pricelist NUMBER; 
  v_priceactual NUMBER;
  v_discount NUMBER;
  v_linenetamt NUMBER;
  v_em_scr_internalcode VARCHAR(60) ;
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;


  IF INSERTING THEN
    v_C_ORDER_ID:=:NEW.C_ORDER_ID;
  ELSE
    v_C_ORDER_ID:=:OLD.C_ORDER_ID;
  END IF;
  SELECT PROCESSED, POSTED,
    C_CURRENCY_ID, Issotrx
  INTO v_Processed, v_Posted,
    v_Currency, v_Issotrx
  FROM C_ORDER
  WHERE C_ORDER_ID=v_C_ORDER_ID;

  --Update the productgroup
  IF(INSERTING OR UPDATING) THEN
    IF(:NEW.m_product_id IS NOT NULL) THEN
      SELECT em_prdc_productgroup_id,em_scr_internalcode
        INTO v_productgroup_id,v_em_scr_internalcode 
        FROM m_product 
       WHERE m_product_id = :NEW.m_product_id;

      :NEW.em_ssa_prdc_productgroup_id := v_productgroup_id;

      IF(v_em_scr_internalcode IS NOT NULL)THEN
         :NEW.EM_Sre_Other_Productvalue:=v_em_scr_internalcode;
      END IF;
    END IF;
  END IF;


  END SSA_ORDERLINE_CHK_REST2_TRG
]]></body>
    </trigger>
  </database>
