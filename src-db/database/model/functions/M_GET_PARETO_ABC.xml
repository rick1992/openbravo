<?xml version="1.0"?>
  <database name="FUNCTION M_GET_PARETO_ABC">
    <function name="M_GET_PARETO_ABC" type="VARCHAR">
      <parameter name="p_warehouse_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_org_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_percentageactual" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_targetcurrency_id" type="VARCHAR" mode="in">
        <default><![CDATA[NULL]]></default>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2012 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/

  v_orgList VARCHAR2(4000) ;
  VARaCUM NUMBER:=0;
  VARaCUMB NUMBER:=0;
  v_limitA NUMBER:=80;
  v_limitB NUMBER:=15;
  v_percentange NUMBER:=0;
  varComprobadoA NUMBER:=0;
  varComprobadoB NUMBER:=0;
  v_totalQty NUMBER;
  v_currency VARCHAR2(32);
  TYPE RECORD IS REF CURSOR;
  Cur_Cursor RECORD;
BEGIN

  IF (p_org_ID IS NULL) THEN
    RAISE_APPLICATION_ERROR(-20000, '@OrganizationNotNull@');
  END IF;
  
  IF(p_targetCurrency_id IS NULL) THEN 

	  SELECT C_CURRENCY_ID INTO v_currency
	  FROM AD_CLIENT
	  WHERE AD_CLIENT_ID = p_client_id;

	  SELECT COALESCE(C_CURRENCY_ID, v_currency) INTO v_currency
	  FROM AD_ORG
	  WHERE AD_ORG_ID = (AD_GET_ORG_LE_BU (p_org_ID, 'LE'));
	ELSE
	  v_currency := p_targetCurrency_id;
	END IF;

  -- Checks if Sum of all Product's movements are zero
  SELECT SUM(movementqty) INTO v_totalQty
  FROM (
    SELECT sum(CASE WHEN T.MOVEMENTQTY<0 THEN -T.MOVEMENTQTY ELSE 0 END) as movementqty, w.m_warehouse_id
    FROM M_TRANSACTION T
      LEFT JOIN M_LOCATOR L ON (T.M_LOCATOR_ID=L.M_LOCATOR_ID)
      LEFT JOIN M_WAREHOUSE W ON (L.M_WAREHOUSE_ID=W.M_WAREHOUSE_ID)
    WHERE (p_warehouse_ID IS NULL OR L.M_WAREHOUSE_ID = p_warehouse_ID)
      AND (p_client_id IS NULL OR T.AD_CLIENT_ID = p_client_id)
      AND ad_isorgincluded(w.AD_ORG_ID, p_org_ID, w.ad_client_id) <> -1
    GROUP BY w.ad_org_id, w.ad_client_id, w.m_warehouse_id    
  ) A
  WHERE A.m_warehouse_id = p_warehouse_id
  HAVING SUM(A.MOVEMENTQTY) > 0;

  IF (v_totalQty = 0) THEN
    RAISE_APPLICATION_ERROR(-20000, '@SCR_ZeroTotalQty@');
  END IF;

  v_percentange := round(p_percentageactual,6);
  varAcum :=0;
  varComprobadoA := 0;
  FOR cur_cursor IN (
      SELECT 100*(SUM(movementqty) / v_totalQty) AS PERCENTAGE, AD_ORG_ID, M_PRODUCT_ID
      FROM (
        SELECT sum(CASE WHEN T.MOVEMENTQTY<0 THEN -T.MOVEMENTQTY ELSE 0 END) as movementqty,	
               T.M_PRODUCT_ID, W.AD_ORG_ID, w.m_warehouse_id as warehouse
        FROM M_TRANSACTION T
          LEFT JOIN M_LOCATOR L ON (T.M_LOCATOR_ID=L.M_LOCATOR_ID)
          LEFT JOIN M_WAREHOUSE W ON (L.M_WAREHOUSE_ID=W.M_WAREHOUSE_ID)
        WHERE (p_warehouse_ID IS NULL OR L.M_WAREHOUSE_ID = p_warehouse_ID)
          AND (p_client_id IS NULL OR W.AD_CLIENT_ID = p_client_id)
          AND ad_isorgincluded(w.AD_ORG_ID, p_org_ID, w.ad_client_id) <> -1
        GROUP BY T.M_PRODUCT_ID, W.AD_ORG_ID, W.AD_CLIENT_ID, w.m_warehouse_id
        HAVING SUM(CASE WHEN T.MOVEMENTQTY<0 THEN -T.MOVEMENTQTY ELSE 0 END) > 0
      ) A
      GROUP BY M_PRODUCT_ID, AD_ORG_ID, warehouse
      ORDER BY AD_ORG_ID, PERCENTAGE DESC
  ) LOOP
    varAcum := varAcum+Cur_Cursor.percentage;
    IF (varComprobadoA=0) THEN
      IF (varAcum>=v_limitA) THEN
        IF (v_percentange>=Cur_Cursor.percentage) THEN
          RETURN 'A';
        ELSE
          varComprobadoA:=-1;
          varAcumB:=-1*Cur_Cursor.percentage;
        END IF;
      END IF;
    END IF;

    IF (varComprobadoA=-1 AND varComprobadoB=0) THEN
      varAcumB:=varAcumB+Cur_Cursor.percentage;
      IF (varAcumB>=v_limitB) THEN
        IF (v_percentange>=Cur_Cursor.percentage) THEN
          RETURN 'B';
        ELSE
          varComprobadoB:=-1;
        END IF;
      END IF;
    END IF;

  END LOOP;
  RETURN 'C';
END M_GET_PARETO_ABC
]]></body>
    </function>
  </database>
