<?xml version="1.0"?>
  <database name="VIEW SCO_FACT_ACCT_CURRBAL_V">
    <view name="SCO_FACT_ACCT_CURRBAL_V"><![CDATA[SELECT (((((((COALESCE(t2.c_invoice_id, '') || '-') || COALESCE(t2.sco_internal_doc_id, '')) || '-') || COALESCE(t2.sco_prepayment_id, '')) || '-') || t2.account_id) || '-') || t2.c_currency_id AS sco_fact_acct_currbal_v_id, asch.ad_client_id, asch.ad_org_id, asch.created, asch.createdby, asch.updated, asch.updatedby, asch.isactive, t2.c_acctschema_id, t2.account_id, t2.acctvalue, t2.physical_documentno, t2.dateinvoiced, t2.duedate, t2.c_currency_id, CASE WHEN (t2.amtsourcedr - t2.amtsourcecr) >= 0 THEN t2.amtsourcedr - t2.amtsourcecr ELSE 0 END AS amtsourcedr, CASE WHEN (t2.amtsourcedr - t2.amtsourcecr) < 0 THEN t2.amtsourcecr - t2.amtsourcedr ELSE 0 END AS amtsourcecr, CASE WHEN (t2.amtacctdr - t2.amtacctcr) >= 0 THEN t2.amtacctdr - t2.amtacctcr ELSE 0 END AS amtacctdr, CASE WHEN (t2.amtacctdr - t2.amtacctcr) < 0 THEN t2.amtacctcr - t2.amtacctdr ELSE 0 END AS amtacctcr, t2.c_invoice_id, t2.sco_internal_doc_id, t2.sco_prepayment_id, t2.c_bpartner_id, COALESCE(CASE WHEN COALESCE(t2.amtsourcedr, 0) <> 0 THEN t2.amtacctdr / t2.amtsourcedr WHEN COALESCE(t2.amtsourcecr, 0) <> 0 THEN t2.amtacctcr / t2.amtsourcecr ELSE NULL END, 1) AS rate, vc.c_validcombination_id FROM (SELECT t1.c_acctschema_id, t1.account_id, t1.acctvalue, i.em_scr_physical_documentno AS physical_documentno, CASE WHEN i.issotrx = 'Y' THEN i.dateinvoiced ELSE i.em_sco_newdateinvoiced END AS dateinvoiced, COALESCE((SELECT min(ps.duedate) AS min FROM fin_payment_schedule ps WHERE ps.c_invoice_id = i.c_invoice_id), i.dateacct) AS duedate, t1.c_currency_id, sum(t1.amtsourcedr) AS amtsourcedr, sum(t1.amtsourcecr) AS amtsourcecr, sum(t1.amtacctdr) AS amtacctdr, sum(t1.amtacctcr) AS amtacctcr, i.c_invoice_id, NULL AS sco_internal_doc_id, NULL AS sco_prepayment_id, i.c_bpartner_id FROM (SELECT fa.c_acctschema_id, fa.account_id, fa.acctvalue, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN fa.em_sco_reeval_currency_id ELSE fa.c_currency_id END AS c_currency_id, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN 0 ELSE fa.amtsourcedr END AS amtsourcedr, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN 0 ELSE fa.amtsourcecr END AS amtsourcecr, fa.amtacctdr, fa.amtacctcr, fa.record_id, fa.em_sco_record3_id FROM fact_acct fa WHERE date_part('year', fa.dateacct) = date_part('year', now())) t1 JOIN c_invoice i ON t1.record_id = i.c_invoice_id OR t1.em_sco_record3_id = i.c_invoice_id GROUP BY t1.c_acctschema_id, t1.account_id, t1.acctvalue, i.c_invoice_id, t1.c_currency_id, i.em_scr_physical_documentno, i.issotrx, i.dateinvoiced, i.em_sco_newdateinvoiced, i.dateacct, i.c_bpartner_id UNION ALL SELECT t1.c_acctschema_id, t1.account_id, t1.acctvalue, i.physical_documentno, i.dateinvoiced, i.duedate, t1.c_currency_id, sum(t1.amtsourcedr) AS amtsourcedr, sum(t1.amtsourcecr) AS amtsourcecr, sum(t1.amtacctdr) AS amtacctdr, sum(t1.amtacctcr) AS amtacctcr, NULL AS c_invoice_id, i.sco_internal_doc_id, NULL AS sco_prepayment_id, i.c_bpartner_id FROM (SELECT fa.c_acctschema_id, fa.account_id, fa.acctvalue, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN fa.em_sco_reeval_currency_id ELSE fa.c_currency_id END AS c_currency_id, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN 0 ELSE fa.amtsourcedr END AS amtsourcedr, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN 0 ELSE fa.amtsourcecr END AS amtsourcecr, fa.amtacctdr, fa.amtacctcr, fa.record_id, fa.em_sco_record3_id FROM fact_acct fa WHERE date_part('year', fa.dateacct) = date_part('year', now())) t1 JOIN sco_internal_doc i ON t1.record_id = i.sco_internal_doc_id OR t1.em_sco_record3_id = i.sco_internal_doc_id GROUP BY t1.c_acctschema_id, t1.account_id, t1.acctvalue, i.sco_internal_doc_id, t1.c_currency_id, i.physical_documentno, i.dateinvoiced, i.duedate, i.c_bpartner_id UNION ALL SELECT t1.c_acctschema_id, t1.account_id, t1.acctvalue, i.documentno AS physical_documentno, i.dategen AS dateinvoiced, i.duedate, t1.c_currency_id, sum(t1.amtsourcedr) AS amtsourcedr, sum(t1.amtsourcecr) AS amtsourcecr, sum(t1.amtacctdr) AS amtacctdr, sum(t1.amtacctcr) AS amtacctcr, NULL AS c_invoice_id, NULL AS sco_internal_doc_id, i.sco_prepayment_id, i.c_bpartner_id FROM (SELECT fa.c_acctschema_id, fa.account_id, fa.acctvalue, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN fa.em_sco_reeval_currency_id ELSE fa.c_currency_id END AS c_currency_id, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN 0 ELSE fa.amtsourcedr END AS amtsourcedr, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN 0 ELSE fa.amtsourcecr END AS amtsourcecr, fa.amtacctdr, fa.amtacctcr, fa.record_id, fa.em_sco_record3_id FROM fact_acct fa WHERE date_part('year', fa.dateacct) = date_part('year', now())) t1 JOIN sco_prepayment i ON t1.record_id = i.sco_prepayment_id OR t1.em_sco_record3_id = i.sco_prepayment_id GROUP BY t1.c_acctschema_id, t1.account_id, t1.acctvalue, i.sco_prepayment_id, t1.c_currency_id, i.documentno, i.dategen, i.duedate, i.c_bpartner_id UNION ALL SELECT t1.c_acctschema_id, t1.account_id, t1.acctvalue, NULL AS physical_documentno, NULL AS dateinvoiced, NULL AS duedate, t1.c_currency_id, sum(t1.amtsourcedr) AS amtsourcedr, sum(t1.amtsourcecr) AS amtsourcecr, sum(t1.amtacctdr) AS amtacctdr, sum(t1.amtacctcr) AS amtacctcr, NULL AS c_invoice_id, NULL AS sco_internal_doc_id, NULL AS sco_prepayment_id, NULL AS c_bpartner_id FROM (SELECT fa.c_acctschema_id, fa.account_id, fa.acctvalue, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN fa.em_sco_reeval_currency_id ELSE fa.c_currency_id END AS c_currency_id, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN 0 ELSE fa.amtsourcedr END AS amtsourcedr, CASE WHEN fa.em_sco_reeval_currency_id IS NOT NULL THEN 0 ELSE fa.amtsourcecr END AS amtsourcecr, fa.amtacctdr, fa.amtacctcr, fa.record_id, fa.em_sco_record3_id FROM fact_acct fa WHERE date_part('year', fa.dateacct) = date_part('year', now())) t1 LEFT JOIN c_invoice i ON t1.record_id = i.c_invoice_id LEFT JOIN c_invoice i2 ON t1.em_sco_record3_id = i2.c_invoice_id LEFT JOIN sco_internal_doc i3 ON t1.record_id = i3.sco_internal_doc_id LEFT JOIN sco_internal_doc i4 ON t1.em_sco_record3_id = i4.sco_internal_doc_id LEFT JOIN sco_prepayment i5 ON t1.record_id = i5.sco_prepayment_id LEFT JOIN sco_prepayment i6 ON t1.em_sco_record3_id = i6.sco_prepayment_id WHERE i.c_invoice_id IS NULL AND i2.c_invoice_id IS NULL AND i3.sco_internal_doc_id IS NULL AND i4.sco_internal_doc_id IS NULL AND i5.sco_prepayment_id IS NULL AND i6.sco_prepayment_id IS NULL GROUP BY t1.c_acctschema_id, t1.account_id, t1.acctvalue, t1.c_currency_id) t2 JOIN c_acctschema asch ON t2.c_acctschema_id = asch.c_acctschema_id JOIN c_validcombination vc ON t2.account_id = vc.account_id WHERE (t2.amtsourcedr - t2.amtsourcecr) <> 0 AND (t2.amtacctdr - t2.amtacctcr) <> 0]]></view>
  </database>
