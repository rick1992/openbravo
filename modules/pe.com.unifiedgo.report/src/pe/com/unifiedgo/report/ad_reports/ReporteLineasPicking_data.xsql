<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2001-2014 Openbravo SLU
 * All Rights Reserved.
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->

<SqlClass name="ReporteLineasPickingData" package="pe.com.unifiedgo.report.ad_reports">
  <SqlClassComment></SqlClassComment>
 <SqlMethod name="select_cro_pag_imp" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[

		select 
		'' as pick_id,
		'' as nro_pkl,
		now() as fecha,
		'' as pickero,
		'' as codigo,
		'' as producto,
		0.00 as cantidad,
		'' as um,
		
		'' as padre
		,'' as type
		,'' as name
		,'' as id

		,ffa.name as nombre 
		
		,fp.documentno as n_documento
		
		,ffa.initialbalance as monto_inicial
		
		,(fft.statementdate) as fecha_movimiento
		
		, cbp.name as tercero
		
		,(case when coalesce(fft.description,'')='' then 
		( fp.description ) else fft.description end)as descripcion
		
		, fft.depositamt as deposito
		
		,fft.paymentamt as reintegro
		
		, (fft.depositamt  - fft.paymentamt )as saldo
		
		, (select cc2.iso_code from c_currency cc2 where cc2.c_currency_id = fft.c_currency_id) as moneda 
		
		, (select coalesce(arlt2.name,coalesce(arl2.name))  from ad_ref_list arl2 
		left join ad_ref_list_trl arlt2 on arlt2.ad_ref_list_id=arl2.ad_ref_list_id 
		where arl2.value=fft.status ) as estado
		
		from fin_financial_account ffa
		inner join fin_finacc_transaction fft on ffa.fin_financial_account_id=fft.fin_financial_account_id
		left join c_bpartner cbp on fft.c_bpartner_id=cbp.c_bpartner_id
		left join fin_payment fp on fft.fin_payment_id=fp.fin_payment_id

		where 
		ffa.ad_client_id IN ('1') 
		and ffa.ad_org_id in ('1') 
		and 1=1 
		and ffa.fin_financial_account_id=?
		
		order by nombre,fft.statementdate,fft.created

      ]]></Sql>
      
    <Field name="rownum" value="count"/>
     <Parameter name="adUserClient" type="replace" optional="true" after="ffa.ad_client_id IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="and ffa.ad_org_id in (" text="'1'"/>
    <Parameter name="parDateFrom" optional="true" after="1=1"><![CDATA[ AND fft.statementdate >= TO_DATE(?)]]></Parameter>
    <Parameter name="parDateTo" optional="true" after="1=1"><![CDATA[ AND fft.statementdate < TO_DATE(?)]]></Parameter>
    <Parameter name="idcuenta"/>
    <!--Parameter name="paramLanguage"></Parameter-->
  </SqlMethod>
  
  
      <SqlMethod name="selectFinFinancialAccountDouble" type="preparedStatement" return="Multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
 	SELECT ffa.AD_ORG_ID AS PADRE, TO_CHAR(ffa.TYPE) AS TYPE, ffa.FIN_FINANCIAL_ACCOUNT_ID AS ID, TO_CHAR(ffa.NAME) AS NAME
        FROM FIN_FINANCIAL_ACCOUNT ffa
        WHERE 1=1
         AND ffa.AD_Client_ID IN('1')
         UNION 
        SELECT null AS PADRE, TO_CHAR(ffa.TYPE) AS TYPE, ffa.FIN_FINANCIAL_ACCOUNT_ID AS ID, TO_CHAR(ffa.NAME) AS NAME
        FROM FIN_FINANCIAL_ACCOUNT ffa
        WHERE 2=2 AND ffa.AD_Client_ID IN('1')    
        ORDER BY PADRE, NAME
      ]]></Sql>
    <Parameter name="adUserClient" type="replace" optional="true" after="ffa.AD_Client_ID IN(" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after=" 2=2 AND ffa.AD_Client_ID IN(" text="'1'"/>    
  </SqlMethod>
  
  
  
  <SqlMethod name="selectpicking" type="preparedStatement" return="Multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        select pkl.obwpl_pickinglist_id as pick_id,
        pkl.documentno as nro_pkl,
        pkl.documentno as nro_pkl,
        pkl.documentdate as fecha,
        pic.name as pickero,
        pro.value as codigo,
        pro.name as producto,
        lin.movementqty as cantidad,
        coalesce((select name from c_uom_trl where c_uom_id = uom.c_uom_id),
        coalesce(uom.name,'')) as um

        from obwpl_pickinglist pkl
        join ad_user pic on pkl.em_swa_user_pickero = pic.ad_user_id
        join m_inoutline lin on pkl.obwpl_pickinglist_id = lin.em_obwpl_pickinglist_id
        join m_product pro on lin.m_product_id = pro.m_product_id
        join c_uom uom on lin.c_uom_id = uom.c_uom_id
      
        order by pkl.obwpl_pickinglist_id
        
        
      ]]></Sql>
    <Parameter name="adUserClient" type="replace" optional="true" after="ffa.AD_Client_ID IN(" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after=" 2=2 AND ffa.AD_Client_ID IN(" text="'1'"/>    
  </SqlMethod>
  
  
  
  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
    <Parameter name="rownum"/>      
  </SqlMethod>
  
  <SqlMethod name="selectCompany" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT NAME
        FROM AD_CLIENT
        WHERE AD_CLIENT_ID = ?
      ]]></Sql>
    <Parameter name="client"/>
  </SqlMethod>
  
   <SqlMethod name="selectSocialName" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT social_name
        FROM AD_ORG
        WHERE AD_ORG_ID = ?
      ]]></Sql>
    <Parameter name="organization"/>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT NAME
        FROM AD_ORG
        WHERE AD_ORG_ID = ?
      ]]></Sql>
    <Parameter name="orgId"/>
  </SqlMethod> 
  <SqlMethod name="selectCurrency" type="preparedStatement" return="string" default="PEN">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT c_currency_id 
        FROM c_currency  
        WHERE iso_code=?
      ]]></Sql>
    <Parameter name="currencyCode"/>
  </SqlMethod>
  
  <SqlMethod name="selectRucOrg" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT a.taxid ruc 
        FROM ad_orginfo a        
        WHERE a.ad_org_id = ?
      ]]></Sql>
    <Parameter name="adUserOrg"/>
  </SqlMethod>
  
  

  
</SqlClass>
